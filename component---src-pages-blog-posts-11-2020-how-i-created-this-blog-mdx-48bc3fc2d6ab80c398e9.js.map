{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/esm/inherits.js","webpack:///./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","webpack:///./node_modules/@babel/runtime/helpers/esm/construct.js","webpack:///./node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","webpack:///./node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","webpack:///./node_modules/prism-react-renderer/prism/index.js","webpack:///./node_modules/prism-react-renderer/dist/index.js","webpack:///./node_modules/prism-react-renderer/themes/duotoneDark/index.js","webpack:///./node_modules/prism-react-renderer/themes/oceanicNext/index.js","webpack:///./src/components/markdown/syntaxHighlight.tsx","webpack:///./src/components/markdown/mdxStyler.tsx","webpack:///./src/components/markdown/post.tsx","webpack:///./src/pages/blog/posts/11-2020/how-i-created-this-blog.mdx","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack:///./src/components/header.tsx"],"names":["_setPrototypeOf","o","p","Object","setPrototypeOf","__proto__","_inherits","subClass","superClass","TypeError","prototype","create","constructor","value","writable","configurable","_getPrototypeOf","getPrototypeOf","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","toString","call","e","Parent","args","Class","a","push","apply","instance","Function","bind","arguments","_cache","Map","undefined","fn","indexOf","has","get","set","Wrapper","this","enumerable","uniqueId","_","Token","Prism","util","encode","tokens","type","content","alias","map","replace","match","objId","obj","defineProperty","clone","visited","key","hasOwnProperty","forEach","v","i","languages","extend","id","redef","lang","insertBefore","inside","before","insert","root","grammar","length","newToken","ret","token","DFS","callback","plugins","highlight","text","language","env","code","tokenize","stringify","matchGrammar","strarr","index","startPos","oneshot","target","patterns","j","pattern","lookbehind","greedy","lookbehindLength","global","flags","RegExp","source","pos","str","lastIndex","exec","from","to","k","len","delNum","slice","after","wrapped","Array","splice","hooks","add","rest","matchedStr","parent","element","join","tag","classes","attributes","aliases","keys","name","markup","tagName","includedCdataInside","def","xml","html","mathml","svg","envVars","insideString","bash","variable","toBeCopied","shell","clike","punctuation","c","cpp","string","css","addInlined","selector","javascript","js","jsx","stringifyToken","walkTokens","openedTags","notTagNorBrace","pop","openedBraces","plainText","javaDocLike","javadoclike","docLanguage","definition","isArray","l","docCommentSupport","addSupport","keywords","className","java","function","getPlaceholder","toUpperCase","defineProperties","buildPlaceholders","placeholderPattern","replaceFilter","tokenStack","placeholder","tokenizePlaceholders","t","s","substring","middle","replacement","concat","php","string_interpolation","test","parameterPrefix","jsdoc","actionscript","comment","interpolation","coffeescript","coffee","unshift","maybeClassNameTokens","flow","keyword","n4js","n4jsd","typescript","ts","templateString","templateLiteralPattern","interpolationObject","interpolationPunctuationObject","interpolationPattern","createTemplate","counter","tokenizeWithHooks","run","tokenizeInterpolationExpression","expression","tempGrammar","tokenizeEmbedded","_tokens","placeholderCounter","placeholderMap","embeddedTokens","interpolationExpression","placeholders","afterTokens","filter","Boolean","supportedLanguages","stringContent","findTemplateStrings","embedded","graphql","inner","createInline","starAlternative","tableCell","tableRow","tableLine","markdown","codeLang","codeBlock","trim","split","toLowerCase","cls","autoloader","valueOf","Math","floor","random","loadLanguages","ele","document","getElementById","innerHTML","textContent","md","diff","PREFIXES","prefix","git","go","handlebars","json","less","makefile","objectivec","ocaml","python","py","reason","sass","atrule","operator","important","property","scss","sql","stylus","func","tsx","wasm","yaml","yml","defaultProps","theme","plain","backgroundColor","color","styles","types","style","opacity","textDecorationLine","fontStyle","fontWeight","_defineProperty","_extends","assign","newlineRe","normalizeEmptyLines","line","empty","appendTypes","typesSize","themeToDict","base","themeDict","reduce","acc","themeEntry","includes","accStyle","objectWithoutProperties","exclude","Component","Highlight","this$1","props","prevTheme","prevLanguage","ref","output","getThemeDict","display","baseStyle","typeStyles","children","getStyleForToken","render","typeArrStack","tokenArrStack","tokenArrIndexStack","tokenArrSizeStack","stackIndex","currentLine","splitByNewlines","newlineCount","i$1","normalizeTokens","getLineProps","getTokenProps","colors","Components","matches","groups","github","MDXStyler","components","postStyles","_frontmatter","layoutProps","MDXLayout","context","pageContext","frontmatter","title","date","MDXContent","excluded","sourceKeys","mdxType","parentName","isMDXComponent","headerStyles","Header"],"mappings":"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","file":"component---src-pages-blog-posts-11-2020-how-i-created-this-blog-mdx-48bc3fc2d6ab80c398e9.js","sourcesContent":["export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nimport isNativeReflectConstruct from \"@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nimport isNativeFunction from \"@babel/runtime/helpers/esm/isNativeFunction\";\nimport construct from \"@babel/runtime/helpers/esm/construct\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","/**\r\n * Prism: Lightweight, robust, elegant syntax highlighting\r\n * MIT license http://www.opensource.org/licenses/mit-license.php/\r\n * @author Lea Verou http://lea.verou.me\r\n */\n\n/**\r\n * prism-react-renderer:\r\n * This file has been modified to remove:\r\n * - globals and window dependency\r\n * - worker support\r\n * - highlightAll and other element dependent methods\r\n * - _.hooks helpers\r\n * - UMD/node-specific hacks\r\n * It has also been run through prettier\r\n */\nvar Prism = function () {\n  var uniqueId = 0;\n  var _ = {\n    util: {\n      encode: function encode(tokens) {\n        if (tokens instanceof Token) {\n          return new Token(tokens.type, _.util.encode(tokens.content), tokens.alias);\n        } else if (_.util.type(tokens) === \"Array\") {\n          return tokens.map(_.util.encode);\n        } else {\n          return tokens.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/\\u00a0/g, \" \");\n        }\n      },\n      type: function type(o) {\n        return Object.prototype.toString.call(o).match(/\\[object (\\w+)\\]/)[1];\n      },\n      objId: function objId(obj) {\n        if (!obj[\"__id\"]) {\n          Object.defineProperty(obj, \"__id\", {\n            value: ++uniqueId\n          });\n        }\n\n        return obj[\"__id\"];\n      },\n      // Deep clone a language definition (e.g. to extend it)\n      clone: function clone(o, visited) {\n        var type = _.util.type(o);\n\n        visited = visited || {};\n\n        switch (type) {\n          case \"Object\":\n            if (visited[_.util.objId(o)]) {\n              return visited[_.util.objId(o)];\n            }\n\n            var clone = {};\n            visited[_.util.objId(o)] = clone;\n\n            for (var key in o) {\n              if (o.hasOwnProperty(key)) {\n                clone[key] = _.util.clone(o[key], visited);\n              }\n            }\n\n            return clone;\n\n          case \"Array\":\n            if (visited[_.util.objId(o)]) {\n              return visited[_.util.objId(o)];\n            }\n\n            var clone = [];\n            visited[_.util.objId(o)] = clone;\n            o.forEach(function (v, i) {\n              clone[i] = _.util.clone(v, visited);\n            });\n            return clone;\n        }\n\n        return o;\n      }\n    },\n    languages: {\n      extend: function extend(id, redef) {\n        var lang = _.util.clone(_.languages[id]);\n\n        for (var key in redef) {\n          lang[key] = redef[key];\n        }\n\n        return lang;\n      },\n\n      /**\r\n       * Insert a token before another token in a language literal\r\n       * As this needs to recreate the object (we cannot actually insert before keys in object literals),\r\n       * we cannot just provide an object, we need anobject and a key.\r\n       * @param inside The key (or language id) of the parent\r\n       * @param before The key to insert before. If not provided, the function appends instead.\r\n       * @param insert Object with the key/value pairs to insert\r\n       * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.\r\n       */\n      insertBefore: function insertBefore(inside, before, insert, root) {\n        root = root || _.languages;\n        var grammar = root[inside];\n\n        if (arguments.length == 2) {\n          insert = arguments[1];\n\n          for (var newToken in insert) {\n            if (insert.hasOwnProperty(newToken)) {\n              grammar[newToken] = insert[newToken];\n            }\n          }\n\n          return grammar;\n        }\n\n        var ret = {};\n\n        for (var token in grammar) {\n          if (grammar.hasOwnProperty(token)) {\n            if (token == before) {\n              for (var newToken in insert) {\n                if (insert.hasOwnProperty(newToken)) {\n                  ret[newToken] = insert[newToken];\n                }\n              }\n            }\n\n            ret[token] = grammar[token];\n          }\n        } // Update references in other language definitions\n\n\n        _.languages.DFS(_.languages, function (key, value) {\n          if (value === root[inside] && key != inside) {\n            this[key] = ret;\n          }\n        });\n\n        return root[inside] = ret;\n      },\n      // Traverse a language definition with Depth First Search\n      DFS: function DFS(o, callback, type, visited) {\n        visited = visited || {};\n\n        for (var i in o) {\n          if (o.hasOwnProperty(i)) {\n            callback.call(o, i, o[i], type || i);\n\n            if (_.util.type(o[i]) === \"Object\" && !visited[_.util.objId(o[i])]) {\n              visited[_.util.objId(o[i])] = true;\n\n              _.languages.DFS(o[i], callback, null, visited);\n            } else if (_.util.type(o[i]) === \"Array\" && !visited[_.util.objId(o[i])]) {\n              visited[_.util.objId(o[i])] = true;\n\n              _.languages.DFS(o[i], callback, i, visited);\n            }\n          }\n        }\n      }\n    },\n    plugins: {},\n    highlight: function highlight(text, grammar, language) {\n      var env = {\n        code: text,\n        grammar: grammar,\n        language: language\n      };\n      env.tokens = _.tokenize(env.code, env.grammar);\n      return Token.stringify(_.util.encode(env.tokens), env.language);\n    },\n    matchGrammar: function matchGrammar(text, strarr, grammar, index, startPos, oneshot, target) {\n      var Token = _.Token;\n\n      for (var token in grammar) {\n        if (!grammar.hasOwnProperty(token) || !grammar[token]) {\n          continue;\n        }\n\n        if (token == target) {\n          return;\n        }\n\n        var patterns = grammar[token];\n        patterns = _.util.type(patterns) === \"Array\" ? patterns : [patterns];\n\n        for (var j = 0; j < patterns.length; ++j) {\n          var pattern = patterns[j],\n              inside = pattern.inside,\n              lookbehind = !!pattern.lookbehind,\n              greedy = !!pattern.greedy,\n              lookbehindLength = 0,\n              alias = pattern.alias;\n\n          if (greedy && !pattern.pattern.global) {\n            // Without the global flag, lastIndex won't work\n            var flags = pattern.pattern.toString().match(/[imuy]*$/)[0];\n            pattern.pattern = RegExp(pattern.pattern.source, flags + \"g\");\n          }\n\n          pattern = pattern.pattern || pattern; // Don’t cache length as it changes during the loop\n\n          for (var i = index, pos = startPos; i < strarr.length; pos += strarr[i].length, ++i) {\n            var str = strarr[i];\n\n            if (strarr.length > text.length) {\n              // Something went terribly wrong, ABORT, ABORT!\n              return;\n            }\n\n            if (str instanceof Token) {\n              continue;\n            }\n\n            if (greedy && i != strarr.length - 1) {\n              pattern.lastIndex = pos;\n              var match = pattern.exec(text);\n\n              if (!match) {\n                break;\n              }\n\n              var from = match.index + (lookbehind ? match[1].length : 0),\n                  to = match.index + match[0].length,\n                  k = i,\n                  p = pos;\n\n              for (var len = strarr.length; k < len && (p < to || !strarr[k].type && !strarr[k - 1].greedy); ++k) {\n                p += strarr[k].length; // Move the index i to the element in strarr that is closest to from\n\n                if (from >= p) {\n                  ++i;\n                  pos = p;\n                }\n              } // If strarr[i] is a Token, then the match starts inside another Token, which is invalid\n\n\n              if (strarr[i] instanceof Token) {\n                continue;\n              } // Number of tokens to delete and replace with the new match\n\n\n              delNum = k - i;\n              str = text.slice(pos, p);\n              match.index -= pos;\n            } else {\n              pattern.lastIndex = 0;\n              var match = pattern.exec(str),\n                  delNum = 1;\n            }\n\n            if (!match) {\n              if (oneshot) {\n                break;\n              }\n\n              continue;\n            }\n\n            if (lookbehind) {\n              lookbehindLength = match[1] ? match[1].length : 0;\n            }\n\n            var from = match.index + lookbehindLength,\n                match = match[0].slice(lookbehindLength),\n                to = from + match.length,\n                before = str.slice(0, from),\n                after = str.slice(to);\n            var args = [i, delNum];\n\n            if (before) {\n              ++i;\n              pos += before.length;\n              args.push(before);\n            }\n\n            var wrapped = new Token(token, inside ? _.tokenize(match, inside) : match, alias, match, greedy);\n            args.push(wrapped);\n\n            if (after) {\n              args.push(after);\n            }\n\n            Array.prototype.splice.apply(strarr, args);\n\n            if (delNum != 1) {\n              _.matchGrammar(text, strarr, grammar, i, pos, true, token);\n            }\n\n            if (oneshot) {\n              break;\n            }\n          }\n        }\n      }\n    },\n    hooks: {\n      add: function add() {}\n    },\n    tokenize: function tokenize(text, grammar, language) {\n      var strarr = [text];\n      var rest = grammar.rest;\n\n      if (rest) {\n        for (var token in rest) {\n          grammar[token] = rest[token];\n        }\n\n        delete grammar.rest;\n      }\n\n      _.matchGrammar(text, strarr, grammar, 0, 0, false);\n\n      return strarr;\n    }\n  };\n\n  var Token = _.Token = function (type, content, alias, matchedStr, greedy) {\n    this.type = type;\n    this.content = content;\n    this.alias = alias; // Copy of the full string this token was created from\n\n    this.length = (matchedStr || \"\").length | 0;\n    this.greedy = !!greedy;\n  };\n\n  Token.stringify = function (o, language, parent) {\n    if (typeof o == \"string\") {\n      return o;\n    }\n\n    if (_.util.type(o) === \"Array\") {\n      return o.map(function (element) {\n        return Token.stringify(element, language, o);\n      }).join(\"\");\n    }\n\n    var env = {\n      type: o.type,\n      content: Token.stringify(o.content, language, parent),\n      tag: \"span\",\n      classes: [\"token\", o.type],\n      attributes: {},\n      language: language,\n      parent: parent\n    };\n\n    if (o.alias) {\n      var aliases = _.util.type(o.alias) === \"Array\" ? o.alias : [o.alias];\n      Array.prototype.push.apply(env.classes, aliases);\n    }\n\n    var attributes = Object.keys(env.attributes).map(function (name) {\n      return name + '=\"' + (env.attributes[name] || \"\").replace(/\"/g, \"&quot;\") + '\"';\n    }).join(\" \");\n    return \"<\" + env.tag + ' class=\"' + env.classes.join(\" \") + '\"' + (attributes ? \" \" + attributes : \"\") + \">\" + env.content + \"</\" + env.tag + \">\";\n  };\n\n  return _;\n}();\n/* This content is auto-generated to include some prismjs language components: */\n\n/* \"prismjs/components/prism-markup\" */\n\n\nPrism.languages.markup = {\n  'comment': /<!--[\\s\\S]*?-->/,\n  'prolog': /<\\?[\\s\\S]+?\\?>/,\n  'doctype': /<!DOCTYPE[\\s\\S]+?>/i,\n  'cdata': /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\n  'tag': {\n    pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/i,\n    greedy: true,\n    inside: {\n      'tag': {\n        pattern: /^<\\/?[^\\s>\\/]+/i,\n        inside: {\n          'punctuation': /^<\\/?/,\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      },\n      'attr-value': {\n        pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/i,\n        inside: {\n          'punctuation': [/^=/, {\n            pattern: /^(\\s*)[\"']|[\"']$/,\n            lookbehind: true\n          }]\n        }\n      },\n      'punctuation': /\\/?>/,\n      'attr-name': {\n        pattern: /[^\\s>\\/]+/,\n        inside: {\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      }\n    }\n  },\n  'entity': /&#?[\\da-z]{1,8};/i\n};\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] = Prism.languages.markup['entity']; // Plugin to make entity title show the real entity, idea by Roman Komarov\n\nPrism.hooks.add('wrap', function (env) {\n  if (env.type === 'entity') {\n    env.attributes['title'] = env.content.replace(/&amp;/, '&');\n  }\n});\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n  /**\n   * Adds an inlined language to markup.\n   *\n   * An example of an inlined language is CSS with `<style>` tags.\n   *\n   * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n   * case insensitive.\n   * @param {string} lang The language key.\n   * @example\n   * addInlined('style', 'css');\n   */\n  value: function addInlined(tagName, lang) {\n    var includedCdataInside = {};\n    includedCdataInside['language-' + lang] = {\n      pattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n      lookbehind: true,\n      inside: Prism.languages[lang]\n    };\n    includedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n    var inside = {\n      'included-cdata': {\n        pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n        inside: includedCdataInside\n      }\n    };\n    inside['language-' + lang] = {\n      pattern: /[\\s\\S]+/,\n      inside: Prism.languages[lang]\n    };\n    var def = {};\n    def[tagName] = {\n      pattern: RegExp(/(<__[\\s\\S]*?>)(?:<!\\[CDATA\\[[\\s\\S]*?\\]\\]>\\s*|[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, tagName), 'i'),\n      lookbehind: true,\n      greedy: true,\n      inside: inside\n    };\n    Prism.languages.insertBefore('markup', 'cdata', def);\n  }\n});\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n/* \"prismjs/components/prism-bash\" */\n\n(function (Prism) {\n  // $ set | grep '^[A-Z][^[:space:]]*=' | cut -d= -f1 | tr '\\n' '|'\n  // + LC_ALL, RANDOM, REPLY, SECONDS.\n  // + make sure PS1..4 are here as they are not always set,\n  // - some useless things.\n  var envVars = '\\\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\\\b';\n  var insideString = {\n    'environment': {\n      pattern: RegExp(\"\\\\$\" + envVars),\n      alias: 'constant'\n    },\n    'variable': [// [0]: Arithmetic Environment\n    {\n      pattern: /\\$?\\(\\([\\s\\S]+?\\)\\)/,\n      greedy: true,\n      inside: {\n        // If there is a $ sign at the beginning highlight $(( and )) as variable\n        'variable': [{\n          pattern: /(^\\$\\(\\([\\s\\S]+)\\)\\)/,\n          lookbehind: true\n        }, /^\\$\\(\\(/],\n        'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n        // Operators according to https://www.gnu.org/software/bash/manual/bashref.html#Shell-Arithmetic\n        'operator': /--?|-=|\\+\\+?|\\+=|!=?|~|\\*\\*?|\\*=|\\/=?|%=?|<<=?|>>=?|<=?|>=?|==?|&&?|&=|\\^=?|\\|\\|?|\\|=|\\?|:/,\n        // If there is no $ sign at the beginning highlight (( and )) as punctuation\n        'punctuation': /\\(\\(?|\\)\\)?|,|;/\n      }\n    }, // [1]: Command Substitution\n    {\n      pattern: /\\$\\((?:\\([^)]+\\)|[^()])+\\)|`[^`]+`/,\n      greedy: true,\n      inside: {\n        'variable': /^\\$\\(|^`|\\)$|`$/\n      }\n    }, // [2]: Brace expansion\n    {\n      pattern: /\\$\\{[^}]+\\}/,\n      greedy: true,\n      inside: {\n        'operator': /:[-=?+]?|[!\\/]|##?|%%?|\\^\\^?|,,?/,\n        'punctuation': /[\\[\\]]/,\n        'environment': {\n          pattern: RegExp(\"(\\\\{)\" + envVars),\n          lookbehind: true,\n          alias: 'constant'\n        }\n      }\n    }, /\\$(?:\\w+|[#?*!@$])/],\n    // Escape sequences from echo and printf's manuals, and escaped quotes.\n    'entity': /\\\\(?:[abceEfnrtv\\\\\"]|O?[0-7]{1,3}|x[0-9a-fA-F]{1,2}|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8})/\n  };\n  Prism.languages.bash = {\n    'shebang': {\n      pattern: /^#!\\s*\\/.*/,\n      alias: 'important'\n    },\n    'comment': {\n      pattern: /(^|[^\"{\\\\$])#.*/,\n      lookbehind: true\n    },\n    'function-name': [// a) function foo {\n    // b) foo() {\n    // c) function foo() {\n    // but not “foo {”\n    {\n      // a) and c)\n      pattern: /(\\bfunction\\s+)\\w+(?=(?:\\s*\\(?:\\s*\\))?\\s*\\{)/,\n      lookbehind: true,\n      alias: 'function'\n    }, {\n      // b)\n      pattern: /\\b\\w+(?=\\s*\\(\\s*\\)\\s*\\{)/,\n      alias: 'function'\n    }],\n    // Highlight variable names as variables in for and select beginnings.\n    'for-or-select': {\n      pattern: /(\\b(?:for|select)\\s+)\\w+(?=\\s+in\\s)/,\n      alias: 'variable',\n      lookbehind: true\n    },\n    // Highlight variable names as variables in the left-hand part\n    // of assignments (“=” and “+=”).\n    'assign-left': {\n      pattern: /(^|[\\s;|&]|[<>]\\()\\w+(?=\\+?=)/,\n      inside: {\n        'environment': {\n          pattern: RegExp(\"(^|[\\\\s;|&]|[<>]\\\\()\" + envVars),\n          lookbehind: true,\n          alias: 'constant'\n        }\n      },\n      alias: 'variable',\n      lookbehind: true\n    },\n    'string': [// Support for Here-documents https://en.wikipedia.org/wiki/Here_document\n    {\n      pattern: /((?:^|[^<])<<-?\\s*)(\\w+?)\\s*(?:\\r?\\n|\\r)(?:[\\s\\S])*?(?:\\r?\\n|\\r)\\2/,\n      lookbehind: true,\n      greedy: true,\n      inside: insideString\n    }, // Here-document with quotes around the tag\n    // → No expansion (so no “inside”).\n    {\n      pattern: /((?:^|[^<])<<-?\\s*)([\"'])(\\w+)\\2\\s*(?:\\r?\\n|\\r)(?:[\\s\\S])*?(?:\\r?\\n|\\r)\\3/,\n      lookbehind: true,\n      greedy: true\n    }, // “Normal” string\n    {\n      pattern: /([\"'])(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|`[^`]+`|(?!\\1)[^\\\\])*\\1/,\n      greedy: true,\n      inside: insideString\n    }],\n    'environment': {\n      pattern: RegExp(\"\\\\$?\" + envVars),\n      alias: 'constant'\n    },\n    'variable': insideString.variable,\n    'function': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:add|apropos|apt|aptitude|apt-cache|apt-get|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    'keyword': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:if|then|else|elif|fi|for|while|in|case|esac|function|select|do|done|until)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    // https://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\n    'builtin': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:\\.|:|break|cd|continue|eval|exec|exit|export|getopts|hash|pwd|readonly|return|shift|test|times|trap|umask|unset|alias|bind|builtin|caller|command|declare|echo|enable|help|let|local|logout|mapfile|printf|read|readarray|source|type|typeset|ulimit|unalias|set|shopt)(?=$|[)\\s;|&])/,\n      lookbehind: true,\n      // Alias added to make those easier to distinguish from strings.\n      alias: 'class-name'\n    },\n    'boolean': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:true|false)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    'file-descriptor': {\n      pattern: /\\B&\\d\\b/,\n      alias: 'important'\n    },\n    'operator': {\n      // Lots of redirections here, but not just that.\n      pattern: /\\d?<>|>\\||\\+=|==?|!=?|=~|<<[<-]?|[&\\d]?>>|\\d?[<>]&?|&[>&]?|\\|[&|]?|<=?|>=?/,\n      inside: {\n        'file-descriptor': {\n          pattern: /^\\d/,\n          alias: 'important'\n        }\n      }\n    },\n    'punctuation': /\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];\\\\]/,\n    'number': {\n      pattern: /(^|\\s)(?:[1-9]\\d*|0)(?:[.,]\\d+)?\\b/,\n      lookbehind: true\n    }\n  };\n  /* Patterns in command substitution. */\n\n  var toBeCopied = ['comment', 'function-name', 'for-or-select', 'assign-left', 'string', 'environment', 'function', 'keyword', 'builtin', 'boolean', 'file-descriptor', 'operator', 'punctuation', 'number'];\n  var inside = insideString.variable[1].inside;\n\n  for (var i = 0; i < toBeCopied.length; i++) {\n    inside[toBeCopied[i]] = Prism.languages.bash[toBeCopied[i]];\n  }\n\n  Prism.languages.shell = Prism.languages.bash;\n})(Prism);\n/* \"prismjs/components/prism-clike\" */\n\n\nPrism.languages.clike = {\n  'comment': [{\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^\\\\:])\\/\\/.*/,\n    lookbehind: true,\n    greedy: true\n  }],\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /((?:\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+)|(?:catch\\s+\\())[\\w.\\\\]+/i,\n    lookbehind: true,\n    inside: {\n      punctuation: /[.\\\\]/\n    }\n  },\n  'keyword': /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n  'boolean': /\\b(?:true|false)\\b/,\n  'function': /\\w+(?=\\()/,\n  'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n  'operator': /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,\n  'punctuation': /[{}[\\];(),.:]/\n};\n/* \"prismjs/components/prism-c\" */\n\nPrism.languages.c = Prism.languages.extend('clike', {\n  'class-name': {\n    pattern: /(\\b(?:enum|struct)\\s+)\\w+/,\n    lookbehind: true\n  },\n  'keyword': /\\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while)\\b/,\n  'operator': />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?/,\n  'number': /(?:\\b0x(?:[\\da-f]+\\.?[\\da-f]*|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]*/i\n});\nPrism.languages.insertBefore('c', 'string', {\n  'macro': {\n    // allow for multiline macro definitions\n    // spaces after the # character compile fine with gcc\n    pattern: /(^\\s*)#\\s*[a-z]+(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n    lookbehind: true,\n    alias: 'property',\n    inside: {\n      // highlight the path of the include statement as a string\n      'string': {\n        pattern: /(#\\s*include\\s*)(?:<.+?>|(\"|')(?:\\\\?.)+?\\2)/,\n        lookbehind: true\n      },\n      // highlight macro directives as keywords\n      'directive': {\n        pattern: /(#\\s*)\\b(?:define|defined|elif|else|endif|error|ifdef|ifndef|if|import|include|line|pragma|undef|using)\\b/,\n        lookbehind: true,\n        alias: 'keyword'\n      }\n    }\n  },\n  // highlight predefined macros as constants\n  'constant': /\\b(?:__FILE__|__LINE__|__DATE__|__TIME__|__TIMESTAMP__|__func__|EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|stdin|stdout|stderr)\\b/\n});\ndelete Prism.languages.c['boolean'];\n/* \"prismjs/components/prism-cpp\" */\n\nPrism.languages.cpp = Prism.languages.extend('c', {\n  'class-name': {\n    pattern: /(\\b(?:class|enum|struct)\\s+)\\w+/,\n    lookbehind: true\n  },\n  'keyword': /\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|class|compl|const|constexpr|const_cast|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|float|for|friend|goto|if|inline|int|int8_t|int16_t|int32_t|int64_t|uint8_t|uint16_t|uint32_t|uint64_t|long|mutable|namespace|new|noexcept|nullptr|operator|private|protected|public|register|reinterpret_cast|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/,\n  'number': {\n    pattern: /(?:\\b0b[01']+|\\b0x(?:[\\da-f']+\\.?[\\da-f']*|\\.[\\da-f']+)(?:p[+-]?[\\d']+)?|(?:\\b[\\d']+\\.?[\\d']*|\\B\\.[\\d']+)(?:e[+-]?[\\d']+)?)[ful]*/i,\n    greedy: true\n  },\n  'operator': />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/,\n  'boolean': /\\b(?:true|false)\\b/\n});\nPrism.languages.insertBefore('cpp', 'string', {\n  'raw-string': {\n    pattern: /R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,\n    alias: 'string',\n    greedy: true\n  }\n});\n/* \"prismjs/components/prism-css\" */\n\n(function (Prism) {\n  var string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n  Prism.languages.css = {\n    'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n    'atrule': {\n      pattern: /@[\\w-]+[\\s\\S]*?(?:;|(?=\\s*\\{))/,\n      inside: {\n        'rule': /@[\\w-]+/ // See rest below\n\n      }\n    },\n    'url': {\n      pattern: RegExp('url\\\\((?:' + string.source + '|[^\\n\\r()]*)\\\\)', 'i'),\n      inside: {\n        'function': /^url/i,\n        'punctuation': /^\\(|\\)$/\n      }\n    },\n    'selector': RegExp('[^{}\\\\s](?:[^{};\"\\']|' + string.source + ')*?(?=\\\\s*\\\\{)'),\n    'string': {\n      pattern: string,\n      greedy: true\n    },\n    'property': /[-_a-z\\xA0-\\uFFFF][-\\w\\xA0-\\uFFFF]*(?=\\s*:)/i,\n    'important': /!important\\b/i,\n    'function': /[-a-z0-9]+(?=\\()/i,\n    'punctuation': /[(){};:,]/\n  };\n  Prism.languages.css['atrule'].inside.rest = Prism.languages.css;\n  var markup = Prism.languages.markup;\n\n  if (markup) {\n    markup.tag.addInlined('style', 'css');\n    Prism.languages.insertBefore('inside', 'attr-value', {\n      'style-attr': {\n        pattern: /\\s*style=(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/i,\n        inside: {\n          'attr-name': {\n            pattern: /^\\s*style/i,\n            inside: markup.tag.inside\n          },\n          'punctuation': /^\\s*=\\s*['\"]|['\"]\\s*$/,\n          'attr-value': {\n            pattern: /.+/i,\n            inside: Prism.languages.css\n          }\n        },\n        alias: 'language-css'\n      }\n    }, markup.tag);\n  }\n})(Prism);\n/* \"prismjs/components/prism-css-extras\" */\n\n\nPrism.languages.css.selector = {\n  pattern: Prism.languages.css.selector,\n  inside: {\n    'pseudo-element': /:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,\n    'pseudo-class': /:[-\\w]+/,\n    'class': /\\.[-:.\\w]+/,\n    'id': /#[-:.\\w]+/,\n    'attribute': {\n      pattern: /\\[(?:[^[\\]\"']|(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1)*\\]/,\n      greedy: true,\n      inside: {\n        'punctuation': /^\\[|\\]$/,\n        'case-sensitivity': {\n          pattern: /(\\s)[si]$/i,\n          lookbehind: true,\n          alias: 'keyword'\n        },\n        'namespace': {\n          pattern: /^(\\s*)[-*\\w\\xA0-\\uFFFF]*\\|(?!=)/,\n          lookbehind: true,\n          inside: {\n            'punctuation': /\\|$/\n          }\n        },\n        'attribute': {\n          pattern: /^(\\s*)[-\\w\\xA0-\\uFFFF]+/,\n          lookbehind: true\n        },\n        'value': [/(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/, {\n          pattern: /(=\\s*)[-\\w\\xA0-\\uFFFF]+(?=\\s*$)/,\n          lookbehind: true\n        }],\n        'operator': /[|~*^$]?=/\n      }\n    },\n    'n-th': [{\n      pattern: /(\\(\\s*)[+-]?\\d*[\\dn](?:\\s*[+-]\\s*\\d+)?(?=\\s*\\))/,\n      lookbehind: true,\n      inside: {\n        'number': /[\\dn]+/,\n        'operator': /[+-]/\n      }\n    }, {\n      pattern: /(\\(\\s*)(?:even|odd)(?=\\s*\\))/i,\n      lookbehind: true\n    }],\n    'punctuation': /[()]/\n  }\n};\nPrism.languages.insertBefore('css', 'property', {\n  'variable': {\n    pattern: /(^|[^-\\w\\xA0-\\uFFFF])--[-_a-z\\xA0-\\uFFFF][-\\w\\xA0-\\uFFFF]*/i,\n    lookbehind: true\n  }\n});\nPrism.languages.insertBefore('css', 'function', {\n  'operator': {\n    pattern: /(\\s)[+\\-*\\/](?=\\s)/,\n    lookbehind: true\n  },\n  'hexcode': /#[\\da-f]{3,8}/i,\n  'entity': /\\\\[\\da-f]{1,8}/i,\n  'unit': {\n    pattern: /(\\d)(?:%|[a-z]+)/,\n    lookbehind: true\n  },\n  'number': /-?[\\d.]+/\n});\n/* \"prismjs/components/prism-javascript\" */\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n  'class-name': [Prism.languages.clike['class-name'], {\n    pattern: /(^|[^$\\w\\xA0-\\uFFFF])[_$A-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\.(?:prototype|constructor))/,\n    lookbehind: true\n  }],\n  'keyword': [{\n    pattern: /((?:^|})\\s*)(?:catch|finally)\\b/,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^.])\\b(?:as|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n    lookbehind: true\n  }],\n  'number': /\\b(?:(?:0[xX](?:[\\dA-Fa-f](?:_[\\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\\d(?:_\\d)?)+n|NaN|Infinity)\\b|(?:\\b(?:\\d(?:_\\d)?)+\\.?(?:\\d(?:_\\d)?)*|\\B\\.(?:\\d(?:_\\d)?)+)(?:[Ee][+-]?(?:\\d(?:_\\d)?)+)?/,\n  // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n  'function': /#?[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n  'operator': /-[-=]?|\\+[+=]?|!=?=?|<<?=?|>>?>?=?|=(?:==?|>)?|&[&=]?|\\|[|=]?|\\*\\*?=?|\\/=?|~|\\^=?|%=?|\\?|\\.{3}/\n});\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|interface|extends|implements|instanceof|new)\\s+)[\\w.\\\\]+/;\nPrism.languages.insertBefore('javascript', 'keyword', {\n  'regex': {\n    pattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s])\\s*)\\/(\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyus]{0,6}(?=\\s*($|[\\r\\n,.;})\\]]))/,\n    lookbehind: true,\n    greedy: true\n  },\n  // This must be declared before keyword because we use \"function\" inside the look-forward\n  'function-variable': {\n    pattern: /#?[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/,\n    alias: 'function'\n  },\n  'parameter': [{\n    pattern: /(function(?:\\s+[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)?\\s*\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\))/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=>)/i,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /(\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*=>)/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*\\s*)\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*\\{)/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }],\n  'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\nPrism.languages.insertBefore('javascript', 'string', {\n  'template-string': {\n    pattern: /`(?:\\\\[\\s\\S]|\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}|(?!\\${)[^\\\\`])*`/,\n    greedy: true,\n    inside: {\n      'template-punctuation': {\n        pattern: /^`|`$/,\n        alias: 'string'\n      },\n      'interpolation': {\n        pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}/,\n        lookbehind: true,\n        inside: {\n          'interpolation-punctuation': {\n            pattern: /^\\${|}$/,\n            alias: 'punctuation'\n          },\n          rest: Prism.languages.javascript\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  }\n});\n\nif (Prism.languages.markup) {\n  Prism.languages.markup.tag.addInlined('script', 'javascript');\n}\n\nPrism.languages.js = Prism.languages.javascript;\n/* \"prismjs/components/prism-jsx\" */\n\n(function (Prism) {\n  var javascript = Prism.util.clone(Prism.languages.javascript);\n  Prism.languages.jsx = Prism.languages.extend('markup', javascript);\n  Prism.languages.jsx.tag.pattern = /<\\/?(?:[\\w.:-]+\\s*(?:\\s+(?:[\\w.:-]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s{'\">=]+|\\{(?:\\{(?:\\{[^}]*\\}|[^{}])*\\}|[^{}])+\\}))?|\\{\\.{3}[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\}))*\\s*\\/?)?>/i;\n  Prism.languages.jsx.tag.inside['tag'].pattern = /^<\\/?[^\\s>\\/]*/i;\n  Prism.languages.jsx.tag.inside['attr-value'].pattern = /=(?!\\{)(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">]+)/i;\n  Prism.languages.jsx.tag.inside['tag'].inside['class-name'] = /^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/;\n  Prism.languages.insertBefore('inside', 'attr-name', {\n    'spread': {\n      pattern: /\\{\\.{3}[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\}/,\n      inside: {\n        'punctuation': /\\.{3}|[{}.]/,\n        'attr-value': /\\w+/\n      }\n    }\n  }, Prism.languages.jsx.tag);\n  Prism.languages.insertBefore('inside', 'attr-value', {\n    'script': {\n      // Allow for two levels of nesting\n      pattern: /=(\\{(?:\\{(?:\\{[^}]*\\}|[^}])*\\}|[^}])+\\})/i,\n      inside: {\n        'script-punctuation': {\n          pattern: /^=(?={)/,\n          alias: 'punctuation'\n        },\n        rest: Prism.languages.jsx\n      },\n      'alias': 'language-javascript'\n    }\n  }, Prism.languages.jsx.tag); // The following will handle plain text inside tags\n\n  var stringifyToken = function stringifyToken(token) {\n    if (!token) {\n      return '';\n    }\n\n    if (typeof token === 'string') {\n      return token;\n    }\n\n    if (typeof token.content === 'string') {\n      return token.content;\n    }\n\n    return token.content.map(stringifyToken).join('');\n  };\n\n  var walkTokens = function walkTokens(tokens) {\n    var openedTags = [];\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n      var notTagNorBrace = false;\n\n      if (typeof token !== 'string') {\n        if (token.type === 'tag' && token.content[0] && token.content[0].type === 'tag') {\n          // We found a tag, now find its kind\n          if (token.content[0].content[0].content === '</') {\n            // Closing tag\n            if (openedTags.length > 0 && openedTags[openedTags.length - 1].tagName === stringifyToken(token.content[0].content[1])) {\n              // Pop matching opening tag\n              openedTags.pop();\n            }\n          } else {\n            if (token.content[token.content.length - 1].content === '/>') ;else {\n              // Opening tag\n              openedTags.push({\n                tagName: stringifyToken(token.content[0].content[1]),\n                openedBraces: 0\n              });\n            }\n          }\n        } else if (openedTags.length > 0 && token.type === 'punctuation' && token.content === '{') {\n          // Here we might have entered a JSX context inside a tag\n          openedTags[openedTags.length - 1].openedBraces++;\n        } else if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces > 0 && token.type === 'punctuation' && token.content === '}') {\n          // Here we might have left a JSX context inside a tag\n          openedTags[openedTags.length - 1].openedBraces--;\n        } else {\n          notTagNorBrace = true;\n        }\n      }\n\n      if (notTagNorBrace || typeof token === 'string') {\n        if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces === 0) {\n          // Here we are inside a tag, and not inside a JSX context.\n          // That's plain text: drop any tokens matched.\n          var plainText = stringifyToken(token); // And merge text with adjacent text\n\n          if (i < tokens.length - 1 && (typeof tokens[i + 1] === 'string' || tokens[i + 1].type === 'plain-text')) {\n            plainText += stringifyToken(tokens[i + 1]);\n            tokens.splice(i + 1, 1);\n          }\n\n          if (i > 0 && (typeof tokens[i - 1] === 'string' || tokens[i - 1].type === 'plain-text')) {\n            plainText = stringifyToken(tokens[i - 1]) + plainText;\n            tokens.splice(i - 1, 1);\n            i--;\n          }\n\n          tokens[i] = new Prism.Token('plain-text', plainText, null, plainText);\n        }\n      }\n\n      if (token.content && typeof token.content !== 'string') {\n        walkTokens(token.content);\n      }\n    }\n  };\n\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (env.language !== 'jsx' && env.language !== 'tsx') {\n      return;\n    }\n\n    walkTokens(env.tokens);\n  });\n})(Prism);\n/* \"prismjs/components/prism-javadoclike\" */\n\n\n(function (Prism) {\n  var javaDocLike = Prism.languages.javadoclike = {\n    'parameter': {\n      pattern: /(^\\s*(?:\\/{3}|\\*|\\/\\*\\*)\\s*@(?:param|arg|arguments)\\s+)\\w+/m,\n      lookbehind: true\n    },\n    'keyword': {\n      // keywords are the first word in a line preceded be an `@` or surrounded by curly braces.\n      // @word, {@word}\n      pattern: /(^\\s*(?:\\/{3}|\\*|\\/\\*\\*)\\s*|\\{)@[a-z][a-zA-Z-]+\\b/m,\n      lookbehind: true\n    },\n    'punctuation': /[{}]/\n  };\n  /**\n   * Adds doc comment support to the given language and calls a given callback on each doc comment pattern.\n   *\n   * @param {string} lang the language add doc comment support to.\n   * @param {(pattern: {inside: {rest: undefined}}) => void} callback the function called with each doc comment pattern as argument.\n   */\n\n  function docCommentSupport(lang, callback) {\n    var tokenName = 'doc-comment';\n    var grammar = Prism.languages[lang];\n\n    if (!grammar) {\n      return;\n    }\n\n    var token = grammar[tokenName];\n\n    if (!token) {\n      // add doc comment: /** */\n      var definition = {};\n      definition[tokenName] = {\n        pattern: /(^|[^\\\\])\\/\\*\\*[^/][\\s\\S]*?(?:\\*\\/|$)/,\n        alias: 'comment'\n      };\n      grammar = Prism.languages.insertBefore(lang, 'comment', definition);\n      token = grammar[tokenName];\n    }\n\n    if (token instanceof RegExp) {\n      // convert regex to object\n      token = grammar[tokenName] = {\n        pattern: token\n      };\n    }\n\n    if (Array.isArray(token)) {\n      for (var i = 0, l = token.length; i < l; i++) {\n        if (token[i] instanceof RegExp) {\n          token[i] = {\n            pattern: token[i]\n          };\n        }\n\n        callback(token[i]);\n      }\n    } else {\n      callback(token);\n    }\n  }\n  /**\n   * Adds doc-comment support to the given languages for the given documentation language.\n   *\n   * @param {string[]|string} languages\n   * @param {Object} docLanguage\n   */\n\n\n  function addSupport(languages, docLanguage) {\n    if (typeof languages === 'string') {\n      languages = [languages];\n    }\n\n    languages.forEach(function (lang) {\n      docCommentSupport(lang, function (pattern) {\n        if (!pattern.inside) {\n          pattern.inside = {};\n        }\n\n        pattern.inside.rest = docLanguage;\n      });\n    });\n  }\n\n  Object.defineProperty(javaDocLike, 'addSupport', {\n    value: addSupport\n  });\n  javaDocLike.addSupport(['java', 'javascript', 'php'], javaDocLike);\n})(Prism);\n/* \"prismjs/components/prism-java\" */\n\n\n(function (Prism) {\n  var keywords = /\\b(?:abstract|continue|for|new|switch|assert|default|goto|package|synchronized|boolean|do|if|private|this|break|double|implements|protected|throw|byte|else|import|public|throws|case|enum|instanceof|return|transient|catch|extends|int|short|try|char|final|interface|static|void|class|finally|long|strictfp|volatile|const|float|native|super|while|var|null|exports|module|open|opens|provides|requires|to|transitive|uses|with)\\b/; // based on the java naming conventions\n\n  var className = /\\b[A-Z](?:\\w*[a-z]\\w*)?\\b/;\n  Prism.languages.java = Prism.languages.extend('clike', {\n    'class-name': [className, // variables and parameters\n    // this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\n    /\\b[A-Z]\\w*(?=\\s+\\w+\\s*[;,=())])/],\n    'keyword': keywords,\n    'function': [Prism.languages.clike.function, {\n      pattern: /(\\:\\:)[a-z_]\\w*/,\n      lookbehind: true\n    }],\n    'number': /\\b0b[01][01_]*L?\\b|\\b0x[\\da-f_]*\\.?[\\da-f_p+-]+\\b|(?:\\b\\d[\\d_]*\\.?[\\d_]*|\\B\\.\\d[\\d_]*)(?:e[+-]?\\d[\\d_]*)?[dfl]?/i,\n    'operator': {\n      pattern: /(^|[^.])(?:<<=?|>>>?=?|->|([-+&|])\\2|[?:~]|[-+*/%&|^!=<>]=?)/m,\n      lookbehind: true\n    }\n  });\n  Prism.languages.insertBefore('java', 'class-name', {\n    'annotation': {\n      alias: 'punctuation',\n      pattern: /(^|[^.])@\\w+/,\n      lookbehind: true\n    },\n    'namespace': {\n      pattern: /(\\b(?:exports|import(?:\\s+static)?|module|open|opens|package|provides|requires|to|transitive|uses|with)\\s+)[a-z]\\w*(\\.[a-z]\\w*)+/,\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\./\n      }\n    },\n    'generics': {\n      pattern: /<(?:[\\w\\s,.&?]|<(?:[\\w\\s,.&?]|<(?:[\\w\\s,.&?]|<[\\w\\s,.&?]*>)*>)*>)*>/,\n      inside: {\n        'class-name': className,\n        'keyword': keywords,\n        'punctuation': /[<>(),.:]/,\n        'operator': /[?&|]/\n      }\n    }\n  });\n})(Prism);\n/* \"prismjs/components/prism-markup-templating\" */\n\n\n(function (Prism) {\n  /**\n   * Returns the placeholder for the given language id and index.\n   *\n   * @param {string} language\n   * @param {string|number} index\n   * @returns {string}\n   */\n  function getPlaceholder(language, index) {\n    return '___' + language.toUpperCase() + index + '___';\n  }\n\n  Object.defineProperties(Prism.languages['markup-templating'] = {}, {\n    buildPlaceholders: {\n      /**\n       * Tokenize all inline templating expressions matching `placeholderPattern`.\n       *\n       * If `replaceFilter` is provided, only matches of `placeholderPattern` for which `replaceFilter` returns\n       * `true` will be replaced.\n       *\n       * @param {object} env The environment of the `before-tokenize` hook.\n       * @param {string} language The language id.\n       * @param {RegExp} placeholderPattern The matches of this pattern will be replaced by placeholders.\n       * @param {(match: string) => boolean} [replaceFilter]\n       */\n      value: function value(env, language, placeholderPattern, replaceFilter) {\n        if (env.language !== language) {\n          return;\n        }\n\n        var tokenStack = env.tokenStack = [];\n        env.code = env.code.replace(placeholderPattern, function (match) {\n          if (typeof replaceFilter === 'function' && !replaceFilter(match)) {\n            return match;\n          }\n\n          var i = tokenStack.length;\n          var placeholder; // Check for existing strings\n\n          while (env.code.indexOf(placeholder = getPlaceholder(language, i)) !== -1) {\n            ++i;\n          } // Create a sparse array\n\n\n          tokenStack[i] = match;\n          return placeholder;\n        }); // Switch the grammar to markup\n\n        env.grammar = Prism.languages.markup;\n      }\n    },\n    tokenizePlaceholders: {\n      /**\n       * Replace placeholders with proper tokens after tokenizing.\n       *\n       * @param {object} env The environment of the `after-tokenize` hook.\n       * @param {string} language The language id.\n       */\n      value: function value(env, language) {\n        if (env.language !== language || !env.tokenStack) {\n          return;\n        } // Switch the grammar back\n\n\n        env.grammar = Prism.languages[language];\n        var j = 0;\n        var keys = Object.keys(env.tokenStack);\n\n        function walkTokens(tokens) {\n          for (var i = 0; i < tokens.length; i++) {\n            // all placeholders are replaced already\n            if (j >= keys.length) {\n              break;\n            }\n\n            var token = tokens[i];\n\n            if (typeof token === 'string' || token.content && typeof token.content === 'string') {\n              var k = keys[j];\n              var t = env.tokenStack[k];\n              var s = typeof token === 'string' ? token : token.content;\n              var placeholder = getPlaceholder(language, k);\n              var index = s.indexOf(placeholder);\n\n              if (index > -1) {\n                ++j;\n                var before = s.substring(0, index);\n                var middle = new Prism.Token(language, Prism.tokenize(t, env.grammar), 'language-' + language, t);\n                var after = s.substring(index + placeholder.length);\n                var replacement = [];\n\n                if (before) {\n                  replacement.push.apply(replacement, walkTokens([before]));\n                }\n\n                replacement.push(middle);\n\n                if (after) {\n                  replacement.push.apply(replacement, walkTokens([after]));\n                }\n\n                if (typeof token === 'string') {\n                  tokens.splice.apply(tokens, [i, 1].concat(replacement));\n                } else {\n                  token.content = replacement;\n                }\n              }\n            } else if (token.content\n            /* && typeof token.content !== 'string' */\n            ) {\n                walkTokens(token.content);\n              }\n          }\n\n          return tokens;\n        }\n\n        walkTokens(env.tokens);\n      }\n    }\n  });\n})(Prism);\n/* \"prismjs/components/prism-php\" */\n\n/**\n * Original by Aaron Harun: http://aahacreative.com/2012/07/31/php-syntax-highlighting-prism/\n * Modified by Miles Johnson: http://milesj.me\n *\n * Supports the following:\n * \t\t- Extends clike syntax\n * \t\t- Support for PHP 5.3+ (namespaces, traits, generators, etc)\n * \t\t- Smarter constant and function matching\n *\n * Adds the following new token classes:\n * \t\tconstant, delimiter, variable, function, package\n */\n\n\n(function (Prism) {\n  Prism.languages.php = Prism.languages.extend('clike', {\n    'keyword': /\\b(?:__halt_compiler|abstract|and|array|as|break|callable|case|catch|class|clone|const|continue|declare|default|die|do|echo|else|elseif|empty|enddeclare|endfor|endforeach|endif|endswitch|endwhile|eval|exit|extends|final|finally|for|foreach|function|global|goto|if|implements|include|include_once|instanceof|insteadof|interface|isset|list|namespace|new|or|parent|print|private|protected|public|require|require_once|return|static|switch|throw|trait|try|unset|use|var|while|xor|yield)\\b/i,\n    'boolean': {\n      pattern: /\\b(?:false|true)\\b/i,\n      alias: 'constant'\n    },\n    'constant': [/\\b[A-Z_][A-Z0-9_]*\\b/, /\\b(?:null)\\b/i],\n    'comment': {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true\n    }\n  });\n  Prism.languages.insertBefore('php', 'string', {\n    'shell-comment': {\n      pattern: /(^|[^\\\\])#.*/,\n      lookbehind: true,\n      alias: 'comment'\n    }\n  });\n  Prism.languages.insertBefore('php', 'comment', {\n    'delimiter': {\n      pattern: /\\?>$|^<\\?(?:php(?=\\s)|=)?/i,\n      alias: 'important'\n    }\n  });\n  Prism.languages.insertBefore('php', 'keyword', {\n    'variable': /\\$+(?:\\w+\\b|(?={))/i,\n    'package': {\n      pattern: /(\\\\|namespace\\s+|use\\s+)[\\w\\\\]+/,\n      lookbehind: true,\n      inside: {\n        punctuation: /\\\\/\n      }\n    }\n  }); // Must be defined after the function pattern\n\n  Prism.languages.insertBefore('php', 'operator', {\n    'property': {\n      pattern: /(->)[\\w]+/,\n      lookbehind: true\n    }\n  });\n  var string_interpolation = {\n    pattern: /{\\$(?:{(?:{[^{}]+}|[^{}]+)}|[^{}])+}|(^|[^\\\\{])\\$+(?:\\w+(?:\\[.+?]|->\\w+)*)/,\n    lookbehind: true,\n    inside: {\n      rest: Prism.languages.php\n    }\n  };\n  Prism.languages.insertBefore('php', 'string', {\n    'nowdoc-string': {\n      pattern: /<<<'([^']+)'(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\1;/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        'delimiter': {\n          pattern: /^<<<'[^']+'|[a-z_]\\w*;$/i,\n          alias: 'symbol',\n          inside: {\n            'punctuation': /^<<<'?|[';]$/\n          }\n        }\n      }\n    },\n    'heredoc-string': {\n      pattern: /<<<(?:\"([^\"]+)\"(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\1;|([a-z_]\\w*)(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\2;)/i,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        'delimiter': {\n          pattern: /^<<<(?:\"[^\"]+\"|[a-z_]\\w*)|[a-z_]\\w*;$/i,\n          alias: 'symbol',\n          inside: {\n            'punctuation': /^<<<\"?|[\";]$/\n          }\n        },\n        'interpolation': string_interpolation // See below\n\n      }\n    },\n    'single-quoted-string': {\n      pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n      greedy: true,\n      alias: 'string'\n    },\n    'double-quoted-string': {\n      pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        'interpolation': string_interpolation // See below\n\n      }\n    }\n  }); // The different types of PHP strings \"replace\" the C-like standard string\n\n  delete Prism.languages.php['string'];\n  Prism.hooks.add('before-tokenize', function (env) {\n    if (!/<\\?/.test(env.code)) {\n      return;\n    }\n\n    var phpPattern = /<\\?(?:[^\"'/#]|\\/(?![*/])|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|(?:\\/\\/|#)(?:[^?\\n\\r]|\\?(?!>))*|\\/\\*[\\s\\S]*?(?:\\*\\/|$))*?(?:\\?>|$)/ig;\n    Prism.languages['markup-templating'].buildPlaceholders(env, 'php', phpPattern);\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'php');\n  });\n})(Prism);\n/* \"prismjs/components/prism-jsdoc\" */\n\n\n(function (Prism) {\n  var javascript = Prism.languages.javascript;\n  var type = /{(?:[^{}]|{(?:[^{}]|{[^{}]*})*})+}/.source;\n  var parameterPrefix = '(@(?:param|arg|argument|property)\\\\s+(?:' + type + '\\\\s+)?)';\n  Prism.languages.jsdoc = Prism.languages.extend('javadoclike', {\n    'parameter': {\n      // @param {string} foo - foo bar\n      pattern: RegExp(parameterPrefix + /[$\\w\\xA0-\\uFFFF.]+(?=\\s|$)/.source),\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\./\n      }\n    }\n  });\n  Prism.languages.insertBefore('jsdoc', 'keyword', {\n    'optional-parameter': {\n      // @param {string} [baz.foo=\"bar\"] foo bar\n      pattern: RegExp(parameterPrefix + /\\[[$\\w\\xA0-\\uFFFF.]+(?:=[^[\\]]+)?\\](?=\\s|$)/.source),\n      lookbehind: true,\n      inside: {\n        'parameter': {\n          pattern: /(^\\[)[$\\w\\xA0-\\uFFFF\\.]+/,\n          lookbehind: true,\n          inside: {\n            'punctuation': /\\./\n          }\n        },\n        'code': {\n          pattern: /(=)[\\s\\S]*(?=\\]$)/,\n          lookbehind: true,\n          inside: javascript,\n          alias: 'language-javascript'\n        },\n        'punctuation': /[=[\\]]/\n      }\n    },\n    'class-name': [{\n      pattern: RegExp('(@[a-z]+\\\\s+)' + type),\n      lookbehind: true,\n      inside: {\n        'punctuation': /[.,:?=<>|{}()[\\]]/\n      }\n    }, {\n      pattern: /(@(?:augments|extends|class|interface|memberof!?|this)\\s+)[A-Z]\\w*(?:\\.[A-Z]\\w*)*/,\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\./\n      }\n    }],\n    'example': {\n      pattern: /(@example\\s+)[^@]+?(?=\\s*(?:\\*\\s*)?(?:@\\w|\\*\\/))/,\n      lookbehind: true,\n      inside: {\n        'code': {\n          pattern: /^(\\s*(?:\\*\\s*)?).+$/m,\n          lookbehind: true,\n          inside: javascript,\n          alias: 'language-javascript'\n        }\n      }\n    }\n  });\n  Prism.languages.javadoclike.addSupport('javascript', Prism.languages.jsdoc);\n})(Prism);\n/* \"prismjs/components/prism-actionscript\" */\n\n\nPrism.languages.actionscript = Prism.languages.extend('javascript', {\n  'keyword': /\\b(?:as|break|case|catch|class|const|default|delete|do|else|extends|finally|for|function|if|implements|import|in|instanceof|interface|internal|is|native|new|null|package|private|protected|public|return|super|switch|this|throw|try|typeof|use|var|void|while|with|dynamic|each|final|get|include|namespace|native|override|set|static)\\b/,\n  'operator': /\\+\\+|--|(?:[+\\-*\\/%^]|&&?|\\|\\|?|<<?|>>?>?|[!=]=?)=?|[~?@]/\n});\nPrism.languages.actionscript['class-name'].alias = 'function';\n\nif (Prism.languages.markup) {\n  Prism.languages.insertBefore('actionscript', 'string', {\n    'xml': {\n      pattern: /(^|[^.])<\\/?\\w+(?:\\s+[^\\s>\\/=]+=(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2)*\\s*\\/?>/,\n      lookbehind: true,\n      inside: {\n        rest: Prism.languages.markup\n      }\n    }\n  });\n}\n/* \"prismjs/components/prism-coffeescript\" */\n\n\n(function (Prism) {\n  // Ignore comments starting with { to privilege string interpolation highlighting\n  var comment = /#(?!\\{).+/,\n      interpolation = {\n    pattern: /#\\{[^}]+\\}/,\n    alias: 'variable'\n  };\n  Prism.languages.coffeescript = Prism.languages.extend('javascript', {\n    'comment': comment,\n    'string': [// Strings are multiline\n    {\n      pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n      greedy: true\n    }, {\n      // Strings are multiline\n      pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n      greedy: true,\n      inside: {\n        'interpolation': interpolation\n      }\n    }],\n    'keyword': /\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,\n    'class-member': {\n      pattern: /@(?!\\d)\\w+/,\n      alias: 'variable'\n    }\n  });\n  Prism.languages.insertBefore('coffeescript', 'comment', {\n    'multiline-comment': {\n      pattern: /###[\\s\\S]+?###/,\n      alias: 'comment'\n    },\n    // Block regexp can contain comments and interpolation\n    'block-regex': {\n      pattern: /\\/{3}[\\s\\S]*?\\/{3}/,\n      alias: 'regex',\n      inside: {\n        'comment': comment,\n        'interpolation': interpolation\n      }\n    }\n  });\n  Prism.languages.insertBefore('coffeescript', 'string', {\n    'inline-javascript': {\n      pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n      inside: {\n        'delimiter': {\n          pattern: /^`|`$/,\n          alias: 'punctuation'\n        },\n        rest: Prism.languages.javascript\n      }\n    },\n    // Block strings\n    'multiline-string': [{\n      pattern: /'''[\\s\\S]*?'''/,\n      greedy: true,\n      alias: 'string'\n    }, {\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        interpolation: interpolation\n      }\n    }]\n  });\n  Prism.languages.insertBefore('coffeescript', 'keyword', {\n    // Object property\n    'property': /(?!\\d)\\w+(?=\\s*:(?!:))/\n  });\n  delete Prism.languages.coffeescript['template-string'];\n  Prism.languages.coffee = Prism.languages.coffeescript;\n})(Prism);\n/* \"prismjs/components/prism-js-extras\" */\n\n\n(function (Prism) {\n  Prism.languages.insertBefore('javascript', 'function-variable', {\n    'method-variable': {\n      pattern: RegExp('(\\\\.\\\\s*)' + Prism.languages.javascript['function-variable'].pattern.source),\n      lookbehind: true,\n      alias: ['function-variable', 'method', 'function', 'property-access']\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'function', {\n    'method': {\n      pattern: RegExp('(\\\\.\\\\s*)' + Prism.languages.javascript['function'].source),\n      lookbehind: true,\n      alias: ['function', 'property-access']\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'constant', {\n    'known-class-name': [{\n      // standard built-ins\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects\n      pattern: /\\b(?:(?:(?:Uint|Int)(?:8|16|32)|Uint8Clamped|Float(?:32|64))?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|(?:Weak)?(?:Set|Map)|WebAssembly)\\b/,\n      alias: 'class-name'\n    }, {\n      // errors\n      pattern: /\\b(?:[A-Z]\\w*)Error\\b/,\n      alias: 'class-name'\n    }]\n  });\n  Prism.languages.javascript['keyword'].unshift({\n    pattern: /\\b(?:as|default|export|from|import)\\b/,\n    alias: 'module'\n  }, {\n    pattern: /\\bnull\\b/,\n    alias: ['null', 'nil']\n  }, {\n    pattern: /\\bundefined\\b/,\n    alias: 'nil'\n  });\n  Prism.languages.insertBefore('javascript', 'operator', {\n    'spread': {\n      pattern: /\\.{3}/,\n      alias: 'operator'\n    },\n    'arrow': {\n      pattern: /=>/,\n      alias: 'operator'\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'punctuation', {\n    'property-access': {\n      pattern: /(\\.\\s*)#?[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*/,\n      lookbehind: true\n    },\n    'maybe-class-name': {\n      pattern: /(^|[^$\\w\\xA0-\\uFFFF])[A-Z][$\\w\\xA0-\\uFFFF]+/,\n      lookbehind: true\n    },\n    'dom': {\n      // this contains only a few commonly used DOM variables\n      pattern: /\\b(?:document|location|navigator|performance|(?:local|session)Storage|window)\\b/,\n      alias: 'variable'\n    },\n    'console': {\n      pattern: /\\bconsole(?=\\s*\\.)/,\n      alias: 'class-name'\n    }\n  }); // add 'maybe-class-name' to tokens which might be a class name\n\n  var maybeClassNameTokens = ['function', 'function-variable', 'method', 'method-variable', 'property-access'];\n\n  for (var i = 0; i < maybeClassNameTokens.length; i++) {\n    var token = maybeClassNameTokens[i];\n    var value = Prism.languages.javascript[token]; // convert regex to object\n\n    if (Prism.util.type(value) === 'RegExp') {\n      value = Prism.languages.javascript[token] = {\n        pattern: value\n      };\n    } // keep in mind that we don't support arrays\n\n\n    var inside = value.inside || {};\n    value.inside = inside;\n    inside['maybe-class-name'] = /^[A-Z][\\s\\S]*/;\n  }\n})(Prism);\n/* \"prismjs/components/prism-flow\" */\n\n\n(function (Prism) {\n  Prism.languages.flow = Prism.languages.extend('javascript', {});\n  Prism.languages.insertBefore('flow', 'keyword', {\n    'type': [{\n      pattern: /\\b(?:[Nn]umber|[Ss]tring|[Bb]oolean|Function|any|mixed|null|void)\\b/,\n      alias: 'tag'\n    }]\n  });\n  Prism.languages.flow['function-variable'].pattern = /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=\\s*(?:function\\b|(?:\\([^()]*\\)(?:\\s*:\\s*\\w+)?|[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/i;\n  delete Prism.languages.flow['parameter'];\n  Prism.languages.insertBefore('flow', 'operator', {\n    'flow-punctuation': {\n      pattern: /\\{\\||\\|\\}/,\n      alias: 'punctuation'\n    }\n  });\n\n  if (!Array.isArray(Prism.languages.flow.keyword)) {\n    Prism.languages.flow.keyword = [Prism.languages.flow.keyword];\n  }\n\n  Prism.languages.flow.keyword.unshift({\n    pattern: /(^|[^$]\\b)(?:type|opaque|declare|Class)\\b(?!\\$)/,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^$]\\B)\\$(?:await|Diff|Exact|Keys|ObjMap|PropertyType|Shape|Record|Supertype|Subtype|Enum)\\b(?!\\$)/,\n    lookbehind: true\n  });\n})(Prism);\n/* \"prismjs/components/prism-n4js\" */\n\n\nPrism.languages.n4js = Prism.languages.extend('javascript', {\n  // Keywords from N4JS language spec: https://numberfour.github.io/n4js/spec/N4JSSpec.html\n  'keyword': /\\b(?:any|Array|boolean|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|false|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|module|new|null|number|package|private|protected|public|return|set|static|string|super|switch|this|throw|true|try|typeof|var|void|while|with|yield)\\b/\n});\nPrism.languages.insertBefore('n4js', 'constant', {\n  // Annotations in N4JS spec: https://numberfour.github.io/n4js/spec/N4JSSpec.html#_annotations\n  'annotation': {\n    pattern: /@+\\w+/,\n    alias: 'operator'\n  }\n});\nPrism.languages.n4jsd = Prism.languages.n4js;\n/* \"prismjs/components/prism-typescript\" */\n\nPrism.languages.typescript = Prism.languages.extend('javascript', {\n  // From JavaScript Prism keyword list and TypeScript language spec: https://github.com/Microsoft/TypeScript/blob/master/doc/spec.md#221-reserved-words\n  'keyword': /\\b(?:abstract|as|async|await|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|is|keyof|let|module|namespace|new|null|of|package|private|protected|public|readonly|return|require|set|static|super|switch|this|throw|try|type|typeof|var|void|while|with|yield)\\b/,\n  'builtin': /\\b(?:string|Function|any|number|boolean|Array|symbol|console|Promise|unknown|never)\\b/\n});\nPrism.languages.ts = Prism.languages.typescript;\n/* \"prismjs/components/prism-js-templates\" */\n\n(function (Prism) {\n  var templateString = Prism.languages.javascript['template-string']; // see the pattern in prism-javascript.js\n\n  var templateLiteralPattern = templateString.pattern.source;\n  var interpolationObject = templateString.inside['interpolation'];\n  var interpolationPunctuationObject = interpolationObject.inside['interpolation-punctuation'];\n  var interpolationPattern = interpolationObject.pattern.source;\n  /**\n   * Creates a new pattern to match a template string with a special tag.\n   *\n   * This will return `undefined` if there is no grammar with the given language id.\n   *\n   * @param {string} language The language id of the embedded language. E.g. `markdown`.\n   * @param {string} tag The regex pattern to match the tag.\n   * @returns {object | undefined}\n   * @example\n   * createTemplate('css', /\\bcss/.source);\n   */\n\n  function createTemplate(language, tag) {\n    if (!Prism.languages[language]) {\n      return undefined;\n    }\n\n    return {\n      pattern: RegExp('((?:' + tag + ')\\\\s*)' + templateLiteralPattern),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'template-punctuation': {\n          pattern: /^`|`$/,\n          alias: 'string'\n        },\n        'embedded-code': {\n          pattern: /[\\s\\S]+/,\n          alias: language\n        }\n      }\n    };\n  }\n\n  Prism.languages.javascript['template-string'] = [// styled-jsx:\n  //   css`a { color: #25F; }`\n  // styled-components:\n  //   styled.h1`color: red;`\n  createTemplate('css', /\\b(?:styled(?:\\([^)]*\\))?(?:\\s*\\.\\s*\\w+(?:\\([^)]*\\))*)*|css(?:\\s*\\.\\s*(?:global|resolve))?|createGlobalStyle|keyframes)/.source), // html`<p></p>`\n  // div.innerHTML = `<p></p>`\n  createTemplate('html', /\\bhtml|\\.\\s*(?:inner|outer)HTML\\s*\\+?=/.source), // svg`<path fill=\"#fff\" d=\"M55.37 ...\"/>`\n  createTemplate('svg', /\\bsvg/.source), // md`# h1`, markdown`## h2`\n  createTemplate('markdown', /\\b(?:md|markdown)/.source), // gql`...`, graphql`...`, graphql.experimental`...`\n  createTemplate('graphql', /\\b(?:gql|graphql(?:\\s*\\.\\s*experimental)?)/.source), // vanilla template string\n  templateString].filter(Boolean);\n  /**\n   * Returns a specific placeholder literal for the given language.\n   *\n   * @param {number} counter\n   * @param {string} language\n   * @returns {string}\n   */\n\n  function getPlaceholder(counter, language) {\n    return '___' + language.toUpperCase() + '_' + counter + '___';\n  }\n  /**\n   * Returns the tokens of `Prism.tokenize` but also runs the `before-tokenize` and `after-tokenize` hooks.\n   *\n   * @param {string} code\n   * @param {any} grammar\n   * @param {string} language\n   * @returns {(string|Token)[]}\n   */\n\n\n  function tokenizeWithHooks(code, grammar, language) {\n    var env = {\n      code: code,\n      grammar: grammar,\n      language: language\n    };\n    Prism.hooks.run('before-tokenize', env);\n    env.tokens = Prism.tokenize(env.code, env.grammar);\n    Prism.hooks.run('after-tokenize', env);\n    return env.tokens;\n  }\n  /**\n   * Returns the token of the given JavaScript interpolation expression.\n   *\n   * @param {string} expression The code of the expression. E.g. `\"${42}\"`\n   * @returns {Token}\n   */\n\n\n  function tokenizeInterpolationExpression(expression) {\n    var tempGrammar = {};\n    tempGrammar['interpolation-punctuation'] = interpolationPunctuationObject;\n    /** @type {Array} */\n\n    var tokens = Prism.tokenize(expression, tempGrammar);\n\n    if (tokens.length === 3) {\n      /**\n       * The token array will look like this\n       * [\n       *     [\"interpolation-punctuation\", \"${\"]\n       *     \"...\" // JavaScript expression of the interpolation\n       *     [\"interpolation-punctuation\", \"}\"]\n       * ]\n       */\n      var args = [1, 1];\n      args.push.apply(args, tokenizeWithHooks(tokens[1], Prism.languages.javascript, 'javascript'));\n      tokens.splice.apply(tokens, args);\n    }\n\n    return new Prism.Token('interpolation', tokens, interpolationObject.alias, expression);\n  }\n  /**\n   * Tokenizes the given code with support for JavaScript interpolation expressions mixed in.\n   *\n   * This function has 3 phases:\n   *\n   * 1. Replace all JavaScript interpolation expression with a placeholder.\n   *    The placeholder will have the syntax of a identify of the target language.\n   * 2. Tokenize the code with placeholders.\n   * 3. Tokenize the interpolation expressions and re-insert them into the tokenize code.\n   *    The insertion only works if a placeholder hasn't been \"ripped apart\" meaning that the placeholder has been\n   *    tokenized as two tokens by the grammar of the embedded language.\n   *\n   * @param {string} code\n   * @param {object} grammar\n   * @param {string} language\n   * @returns {Token}\n   */\n\n\n  function tokenizeEmbedded(code, grammar, language) {\n    // 1. First filter out all interpolations\n    // because they might be escaped, we need a lookbehind, so we use Prism\n\n    /** @type {(Token|string)[]} */\n    var _tokens = Prism.tokenize(code, {\n      'interpolation': {\n        pattern: RegExp(interpolationPattern),\n        lookbehind: true\n      }\n    }); // replace all interpolations with a placeholder which is not in the code already\n\n\n    var placeholderCounter = 0;\n    /** @type {Object<string, string>} */\n\n    var placeholderMap = {};\n\n    var embeddedCode = _tokens.map(function (token) {\n      if (typeof token === 'string') {\n        return token;\n      } else {\n        var interpolationExpression = token.content;\n        var placeholder;\n\n        while (code.indexOf(placeholder = getPlaceholder(placeholderCounter++, language)) !== -1) {}\n\n        placeholderMap[placeholder] = interpolationExpression;\n        return placeholder;\n      }\n    }).join(''); // 2. Tokenize the embedded code\n\n\n    var embeddedTokens = tokenizeWithHooks(embeddedCode, grammar, language); // 3. Re-insert the interpolation\n\n    var placeholders = Object.keys(placeholderMap);\n    placeholderCounter = 0;\n    /**\n     *\n     * @param {(Token|string)[]} tokens\n     * @returns {void}\n     */\n\n    function walkTokens(tokens) {\n      for (var i = 0; i < tokens.length; i++) {\n        if (placeholderCounter >= placeholders.length) {\n          return;\n        }\n\n        var token = tokens[i];\n\n        if (typeof token === 'string' || typeof token.content === 'string') {\n          var placeholder = placeholders[placeholderCounter];\n          var s = typeof token === 'string' ? token :\n          /** @type {string} */\n          token.content;\n          var index = s.indexOf(placeholder);\n\n          if (index !== -1) {\n            ++placeholderCounter;\n            var before = s.substring(0, index);\n            var middle = tokenizeInterpolationExpression(placeholderMap[placeholder]);\n            var after = s.substring(index + placeholder.length);\n            var replacement = [];\n\n            if (before) {\n              replacement.push(before);\n            }\n\n            replacement.push(middle);\n\n            if (after) {\n              var afterTokens = [after];\n              walkTokens(afterTokens);\n              replacement.push.apply(replacement, afterTokens);\n            }\n\n            if (typeof token === 'string') {\n              tokens.splice.apply(tokens, [i, 1].concat(replacement));\n              i += replacement.length - 1;\n            } else {\n              token.content = replacement;\n            }\n          }\n        } else {\n          var content = token.content;\n\n          if (Array.isArray(content)) {\n            walkTokens(content);\n          } else {\n            walkTokens([content]);\n          }\n        }\n      }\n    }\n\n    walkTokens(embeddedTokens);\n    return new Prism.Token(language, embeddedTokens, 'language-' + language, code);\n  }\n  /**\n   * The languages for which JS templating will handle tagged template literals.\n   *\n   * JS templating isn't active for only JavaScript but also related languages like TypeScript, JSX, and TSX.\n   */\n\n\n  var supportedLanguages = {\n    'javascript': true,\n    'js': true,\n    'typescript': true,\n    'ts': true,\n    'jsx': true,\n    'tsx': true\n  };\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (!(env.language in supportedLanguages)) {\n      return;\n    }\n    /**\n     * Finds and tokenizes all template strings with an embedded languages.\n     *\n     * @param {(Token | string)[]} tokens\n     * @returns {void}\n     */\n\n\n    function findTemplateStrings(tokens) {\n      for (var i = 0, l = tokens.length; i < l; i++) {\n        var token = tokens[i];\n\n        if (typeof token === 'string') {\n          continue;\n        }\n\n        var content = token.content;\n\n        if (!Array.isArray(content)) {\n          if (typeof content !== 'string') {\n            findTemplateStrings([content]);\n          }\n\n          continue;\n        }\n\n        if (token.type === 'template-string') {\n          /**\n           * A JavaScript template-string token will look like this:\n           *\n           * [\"template-string\", [\n           *     [\"template-punctuation\", \"`\"],\n           *     (\n           *         An array of \"string\" and \"interpolation\" tokens. This is the simple string case.\n           *         or\n           *         [\"embedded-code\", \"...\"] This is the token containing the embedded code.\n           *                                  It also has an alias which is the language of the embedded code.\n           *     ),\n           *     [\"template-punctuation\", \"`\"]\n           * ]]\n           */\n          var embedded = content[1];\n\n          if (content.length === 3 && typeof embedded !== 'string' && embedded.type === 'embedded-code') {\n            // get string content\n            var code = stringContent(embedded);\n            var alias = embedded.alias;\n            var language = Array.isArray(alias) ? alias[0] : alias;\n            var grammar = Prism.languages[language];\n\n            if (!grammar) {\n              // the embedded language isn't registered.\n              continue;\n            }\n\n            content[1] = tokenizeEmbedded(code, grammar, language);\n          }\n        } else {\n          findTemplateStrings(content);\n        }\n      }\n    }\n\n    findTemplateStrings(env.tokens);\n  });\n  /**\n   * Returns the string content of a token or token stream.\n   *\n   * @param {string | Token | (string | Token)[]} value\n   * @returns {string}\n   */\n\n  function stringContent(value) {\n    if (typeof value === 'string') {\n      return value;\n    } else if (Array.isArray(value)) {\n      return value.map(stringContent).join('');\n    } else {\n      return stringContent(value.content);\n    }\n  }\n})(Prism);\n/* \"prismjs/components/prism-graphql\" */\n\n\nPrism.languages.graphql = {\n  'comment': /#.*/,\n  'string': {\n    pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n    greedy: true\n  },\n  'number': /(?:\\B-|\\b)\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n  'boolean': /\\b(?:true|false)\\b/,\n  'variable': /\\$[a-z_]\\w*/i,\n  'directive': {\n    pattern: /@[a-z_]\\w*/i,\n    alias: 'function'\n  },\n  'attr-name': {\n    pattern: /[a-z_]\\w*(?=\\s*(?:\\((?:[^()\"]|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")*\\))?:)/i,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /(\\b(?:enum|implements|interface|on|scalar|type|union)\\s+)[a-zA-Z_]\\w*/,\n    lookbehind: true\n  },\n  'fragment': {\n    pattern: /(\\bfragment\\s+|\\.{3}\\s*(?!on\\b))[a-zA-Z_]\\w*/,\n    lookbehind: true,\n    alias: 'function'\n  },\n  'keyword': /\\b(?:enum|fragment|implements|input|interface|mutation|on|query|scalar|schema|type|union)\\b/,\n  'operator': /[!=|]|\\.{3}/,\n  'punctuation': /[!(){}\\[\\]:=,]/,\n  'constant': /\\b(?!ID\\b)[A-Z][A-Z_\\d]*\\b/\n};\n/* \"prismjs/components/prism-markdown\" */\n\n(function (Prism) {\n  // Allow only one line break\n  var inner = /(?:\\\\.|[^\\\\\\n\\r]|(?:\\r?\\n|\\r)(?!\\r?\\n|\\r))/.source;\n  /**\n   * This function is intended for the creation of the bold or italic pattern.\n   *\n   * This also adds a lookbehind group to the given pattern to ensure that the pattern is not backslash-escaped.\n   *\n   * _Note:_ Keep in mind that this adds a capturing group.\n   *\n   * @param {string} pattern\n   * @param {boolean} starAlternative Whether to also add an alternative where all `_`s are replaced with `*`s.\n   * @returns {RegExp}\n   */\n\n  function createInline(pattern, starAlternative) {\n    pattern = pattern.replace(/<inner>/g, inner);\n\n    if (starAlternative) {\n      pattern = pattern + '|' + pattern.replace(/_/g, '\\\\*');\n    }\n\n    return RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source + '(?:' + pattern + ')');\n  }\n\n  var tableCell = /(?:\\\\.|``.+?``|`[^`\\r\\n]+`|[^\\\\|\\r\\n`])+/.source;\n  var tableRow = /\\|?__(?:\\|__)+\\|?(?:(?:\\r?\\n|\\r)|$)/.source.replace(/__/g, tableCell);\n  var tableLine = /\\|?[ \\t]*:?-{3,}:?[ \\t]*(?:\\|[ \\t]*:?-{3,}:?[ \\t]*)+\\|?(?:\\r?\\n|\\r)/.source;\n  Prism.languages.markdown = Prism.languages.extend('markup', {});\n  Prism.languages.insertBefore('markdown', 'prolog', {\n    'blockquote': {\n      // > ...\n      pattern: /^>(?:[\\t ]*>)*/m,\n      alias: 'punctuation'\n    },\n    'table': {\n      pattern: RegExp('^' + tableRow + tableLine + '(?:' + tableRow + ')*', 'm'),\n      inside: {\n        'table-data-rows': {\n          pattern: RegExp('^(' + tableRow + tableLine + ')(?:' + tableRow + ')*$'),\n          lookbehind: true,\n          inside: {\n            'table-data': {\n              pattern: RegExp(tableCell),\n              inside: Prism.languages.markdown\n            },\n            'punctuation': /\\|/\n          }\n        },\n        'table-line': {\n          pattern: RegExp('^(' + tableRow + ')' + tableLine + '$'),\n          lookbehind: true,\n          inside: {\n            'punctuation': /\\||:?-{3,}:?/\n          }\n        },\n        'table-header-row': {\n          pattern: RegExp('^' + tableRow + '$'),\n          inside: {\n            'table-header': {\n              pattern: RegExp(tableCell),\n              alias: 'important',\n              inside: Prism.languages.markdown\n            },\n            'punctuation': /\\|/\n          }\n        }\n      }\n    },\n    'code': [{\n      // Prefixed by 4 spaces or 1 tab and preceded by an empty line\n      pattern: /(^[ \\t]*(?:\\r?\\n|\\r))(?: {4}|\\t).+(?:(?:\\r?\\n|\\r)(?: {4}|\\t).+)*/m,\n      lookbehind: true,\n      alias: 'keyword'\n    }, {\n      // `code`\n      // ``code``\n      pattern: /``.+?``|`[^`\\r\\n]+`/,\n      alias: 'keyword'\n    }, {\n      // ```optional language\n      // code block\n      // ```\n      pattern: /^```[\\s\\S]*?^```$/m,\n      greedy: true,\n      inside: {\n        'code-block': {\n          pattern: /^(```.*(?:\\r?\\n|\\r))[\\s\\S]+?(?=(?:\\r?\\n|\\r)^```$)/m,\n          lookbehind: true\n        },\n        'code-language': {\n          pattern: /^(```).+/,\n          lookbehind: true\n        },\n        'punctuation': /```/\n      }\n    }],\n    'title': [{\n      // title 1\n      // =======\n      // title 2\n      // -------\n      pattern: /\\S.*(?:\\r?\\n|\\r)(?:==+|--+)(?=[ \\t]*$)/m,\n      alias: 'important',\n      inside: {\n        punctuation: /==+$|--+$/\n      }\n    }, {\n      // # title 1\n      // ###### title 6\n      pattern: /(^\\s*)#+.+/m,\n      lookbehind: true,\n      alias: 'important',\n      inside: {\n        punctuation: /^#+|#+$/\n      }\n    }],\n    'hr': {\n      // ***\n      // ---\n      // * * *\n      // -----------\n      pattern: /(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'list': {\n      // * item\n      // + item\n      // - item\n      // 1. item\n      pattern: /(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'url-reference': {\n      // [id]: http://example.com \"Optional title\"\n      // [id]: http://example.com 'Optional title'\n      // [id]: http://example.com (Optional title)\n      // [id]: <http://example.com> \"Optional title\"\n      pattern: /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,\n      inside: {\n        'variable': {\n          pattern: /^(!?\\[)[^\\]]+/,\n          lookbehind: true\n        },\n        'string': /(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,\n        'punctuation': /^[\\[\\]!:]|[<>]/\n      },\n      alias: 'url'\n    },\n    'bold': {\n      // **strong**\n      // __strong__\n      // allow one nested instance of italic text using the same delimiter\n      pattern: createInline(/__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__/.source, true),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^..)[\\s\\S]+(?=..$)/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'punctuation': /\\*\\*|__/\n      }\n    },\n    'italic': {\n      // *em*\n      // _em_\n      // allow one nested instance of bold text using the same delimiter\n      pattern: createInline(/_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_/.source, true),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^.)[\\s\\S]+(?=.$)/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'punctuation': /[*_]/\n      }\n    },\n    'strike': {\n      // ~~strike through~~\n      // ~strike~\n      pattern: createInline(/(~~?)(?:(?!~)<inner>)+?\\2/.source, false),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^~~?)[\\s\\S]+(?=\\1$)/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'punctuation': /~~?/\n      }\n    },\n    'url': {\n      // [example](http://example.com \"Optional title\")\n      // [example][id]\n      // [example] [id]\n      pattern: createInline(/!?\\[(?:(?!\\])<inner>)+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)| ?\\[(?:(?!\\])<inner>)+\\])/.source, false),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'variable': {\n          pattern: /(\\[)[^\\]]+(?=\\]$)/,\n          lookbehind: true\n        },\n        'content': {\n          pattern: /(^!?\\[)[^\\]]+(?=\\])/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'string': {\n          pattern: /\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/\n        }\n      }\n    }\n  });\n  ['url', 'bold', 'italic', 'strike'].forEach(function (token) {\n    ['url', 'bold', 'italic', 'strike'].forEach(function (inside) {\n      if (token !== inside) {\n        Prism.languages.markdown[token].inside.content.inside[inside] = Prism.languages.markdown[inside];\n      }\n    });\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (env.language !== 'markdown' && env.language !== 'md') {\n      return;\n    }\n\n    function walkTokens(tokens) {\n      if (!tokens || typeof tokens === 'string') {\n        return;\n      }\n\n      for (var i = 0, l = tokens.length; i < l; i++) {\n        var token = tokens[i];\n\n        if (token.type !== 'code') {\n          walkTokens(token.content);\n          continue;\n        }\n        /*\n         * Add the correct `language-xxxx` class to this code block. Keep in mind that the `code-language` token\n         * is optional. But the grammar is defined so that there is only one case we have to handle:\n         *\n         * token.content = [\n         *     <span class=\"punctuation\">```</span>,\n         *     <span class=\"code-language\">xxxx</span>,\n         *     '\\n', // exactly one new lines (\\r or \\n or \\r\\n)\n         *     <span class=\"code-block\">...</span>,\n         *     '\\n', // exactly one new lines again\n         *     <span class=\"punctuation\">```</span>\n         * ];\n         */\n\n\n        var codeLang = token.content[1];\n        var codeBlock = token.content[3];\n\n        if (codeLang && codeBlock && codeLang.type === 'code-language' && codeBlock.type === 'code-block' && typeof codeLang.content === 'string') {\n          // this might be a language that Prism does not support\n          var alias = 'language-' + codeLang.content.trim().split(/\\s+/)[0].toLowerCase(); // add alias\n\n          if (!codeBlock.alias) {\n            codeBlock.alias = [alias];\n          } else if (typeof codeBlock.alias === 'string') {\n            codeBlock.alias = [codeBlock.alias, alias];\n          } else {\n            codeBlock.alias.push(alias);\n          }\n        }\n      }\n    }\n\n    walkTokens(env.tokens);\n  });\n  Prism.hooks.add('wrap', function (env) {\n    if (env.type !== 'code-block') {\n      return;\n    }\n\n    var codeLang = '';\n\n    for (var i = 0, l = env.classes.length; i < l; i++) {\n      var cls = env.classes[i];\n      var match = /language-(.+)/.exec(cls);\n\n      if (match) {\n        codeLang = match[1];\n        break;\n      }\n    }\n\n    var grammar = Prism.languages[codeLang];\n\n    if (!grammar) {\n      if (codeLang && codeLang !== 'none' && Prism.plugins.autoloader) {\n        var id = 'md-' + new Date().valueOf() + '-' + Math.floor(Math.random() * 1e16);\n        env.attributes['id'] = id;\n        Prism.plugins.autoloader.loadLanguages(codeLang, function () {\n          var ele = document.getElementById(id);\n\n          if (ele) {\n            ele.innerHTML = Prism.highlight(ele.textContent, Prism.languages[codeLang], codeLang);\n          }\n        });\n      }\n    } else {\n      // reverse Prism.util.encode\n      var code = env.content.replace(/&lt;/g, '<').replace(/&amp;/g, '&');\n      env.content = Prism.highlight(code, grammar, codeLang);\n    }\n  });\n  Prism.languages.md = Prism.languages.markdown;\n})(Prism);\n/* \"prismjs/components/prism-diff\" */\n\n\n(function (Prism) {\n  Prism.languages.diff = {\n    'coord': [// Match all kinds of coord lines (prefixed by \"+++\", \"---\" or \"***\").\n    /^(?:\\*{3}|-{3}|\\+{3}).*$/m, // Match \"@@ ... @@\" coord lines in unified diff.\n    /^@@.*@@$/m, // Match coord lines in normal diff (starts with a number).\n    /^\\d+.*$/m] // deleted, inserted, unchanged, diff\n\n  };\n  /**\n   * A map from the name of a block to its line prefix.\n   *\n   * @type {Object<string, string>}\n   */\n\n  var PREFIXES = {\n    'deleted-sign': '-',\n    'deleted-arrow': '<',\n    'inserted-sign': '+',\n    'inserted-arrow': '>',\n    'unchanged': ' ',\n    'diff': '!'\n  }; // add a token for each prefix\n\n  Object.keys(PREFIXES).forEach(function (name) {\n    var prefix = PREFIXES[name];\n    var alias = [];\n\n    if (!/^\\w+$/.test(name)) {\n      // \"deleted-sign\" -> \"deleted\"\n      alias.push(/\\w+/.exec(name)[0]);\n    }\n\n    if (name === \"diff\") {\n      alias.push(\"bold\");\n    }\n\n    Prism.languages.diff[name] = {\n      // pattern: /^(?:[_].*(?:\\r\\n?|\\n|(?![\\s\\S])))+/m\n      pattern: RegExp('^(?:[' + prefix + '].*(?:\\r\\n?|\\n|(?![\\\\s\\\\S])))+', 'm'),\n      alias: alias\n    };\n  }); // make prefixes available to Diff plugin\n\n  Object.defineProperty(Prism.languages.diff, 'PREFIXES', {\n    value: PREFIXES\n  });\n})(Prism);\n/* \"prismjs/components/prism-git\" */\n\n\nPrism.languages.git = {\n  /*\n   * A simple one line comment like in a git status command\n   * For instance:\n   * $ git status\n   * # On branch infinite-scroll\n   * # Your branch and 'origin/sharedBranches/frontendTeam/infinite-scroll' have diverged,\n   * # and have 1 and 2 different commits each, respectively.\n   * nothing to commit (working directory clean)\n   */\n  'comment': /^#.*/m,\n\n  /*\n   * Regexp to match the changed lines in a git diff output. Check the example below.\n   */\n  'deleted': /^[-–].*/m,\n  'inserted': /^\\+.*/m,\n\n  /*\n   * a string (double and simple quote)\n   */\n  'string': /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/m,\n\n  /*\n   * a git command. It starts with a random prompt finishing by a $, then \"git\" then some other parameters\n   * For instance:\n   * $ git add file.txt\n   */\n  'command': {\n    pattern: /^.*\\$ git .*$/m,\n    inside: {\n      /*\n       * A git command can contain a parameter starting by a single or a double dash followed by a string\n       * For instance:\n       * $ git diff --cached\n       * $ git log -p\n       */\n      'parameter': /\\s--?\\w+/m\n    }\n  },\n\n  /*\n   * Coordinates displayed in a git diff command\n   * For instance:\n   * $ git diff\n   * diff --git file.txt file.txt\n   * index 6214953..1d54a52 100644\n   * --- file.txt\n   * +++ file.txt\n   * @@ -1 +1,2 @@\n   * -Here's my tetx file\n   * +Here's my text file\n   * +And this is the second line\n   */\n  'coord': /^@@.*@@$/m,\n\n  /*\n   * Match a \"commit [SHA1]\" line in a git log output.\n   * For instance:\n   * $ git log\n   * commit a11a14ef7e26f2ca62d4b35eac455ce636d0dc09\n   * Author: lgiraudel\n   * Date:   Mon Feb 17 11:18:34 2014 +0100\n   *\n   *     Add of a new line\n   */\n  'commit_sha1': /^commit \\w{40}$/m\n};\n/* \"prismjs/components/prism-go\" */\n\nPrism.languages.go = Prism.languages.extend('clike', {\n  'keyword': /\\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\\b/,\n  'builtin': /\\b(?:bool|byte|complex(?:64|128)|error|float(?:32|64)|rune|string|u?int(?:8|16|32|64)?|uintptr|append|cap|close|complex|copy|delete|imag|len|make|new|panic|print(?:ln)?|real|recover)\\b/,\n  'boolean': /\\b(?:_|iota|nil|true|false)\\b/,\n  'operator': /[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\./,\n  'number': /(?:\\b0x[a-f\\d]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[-+]?\\d+)?)i?/i,\n  'string': {\n    pattern: /([\"'`])(\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n    greedy: true\n  }\n});\ndelete Prism.languages.go['class-name'];\n/* \"prismjs/components/prism-handlebars\" */\n\n(function (Prism) {\n  Prism.languages.handlebars = {\n    'comment': /\\{\\{![\\s\\S]*?\\}\\}/,\n    'delimiter': {\n      pattern: /^\\{\\{\\{?|\\}\\}\\}?$/i,\n      alias: 'punctuation'\n    },\n    'string': /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n    'boolean': /\\b(?:true|false)\\b/,\n    'block': {\n      pattern: /^(\\s*~?\\s*)[#\\/]\\S+?(?=\\s*~?\\s*$|\\s)/i,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    'brackets': {\n      pattern: /\\[[^\\]]+\\]/,\n      inside: {\n        punctuation: /\\[|\\]/,\n        variable: /[\\s\\S]+/\n      }\n    },\n    'punctuation': /[!\"#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~]/,\n    'variable': /[^!\"#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~\\s]+/\n  };\n  Prism.hooks.add('before-tokenize', function (env) {\n    var handlebarsPattern = /\\{\\{\\{[\\s\\S]+?\\}\\}\\}|\\{\\{[\\s\\S]+?\\}\\}/g;\n    Prism.languages['markup-templating'].buildPlaceholders(env, 'handlebars', handlebarsPattern);\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'handlebars');\n  });\n})(Prism);\n/* \"prismjs/components/prism-json\" */\n\n\nPrism.languages.json = {\n  'property': {\n    pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n    greedy: true\n  },\n  'string': {\n    pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\n    greedy: true\n  },\n  'comment': /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n  'number': /-?\\d+\\.?\\d*(e[+-]?\\d+)?/i,\n  'punctuation': /[{}[\\],]/,\n  'operator': /:/,\n  'boolean': /\\b(?:true|false)\\b/,\n  'null': {\n    pattern: /\\bnull\\b/,\n    alias: 'keyword'\n  }\n};\n/* \"prismjs/components/prism-less\" */\n\n/* FIXME :\n :extend() is not handled specifically : its highlighting is buggy.\n Mixin usage must be inside a ruleset to be highlighted.\n At-rules (e.g. import) containing interpolations are buggy.\n Detached rulesets are highlighted as at-rules.\n A comment before a mixin usage prevents the latter to be properly highlighted.\n */\n\nPrism.languages.less = Prism.languages.extend('css', {\n  'comment': [/\\/\\*[\\s\\S]*?\\*\\//, {\n    pattern: /(^|[^\\\\])\\/\\/.*/,\n    lookbehind: true\n  }],\n  'atrule': {\n    pattern: /@[\\w-]+?(?:\\([^{}]+\\)|[^(){};])*?(?=\\s*\\{)/i,\n    inside: {\n      'punctuation': /[:()]/\n    }\n  },\n  // selectors and mixins are considered the same\n  'selector': {\n    pattern: /(?:@\\{[\\w-]+\\}|[^{};\\s@])(?:@\\{[\\w-]+\\}|\\([^{}]*\\)|[^{};@])*?(?=\\s*\\{)/,\n    inside: {\n      // mixin parameters\n      'variable': /@+[\\w-]+/\n    }\n  },\n  'property': /(?:@\\{[\\w-]+\\}|[\\w-])+(?:\\+_?)?(?=\\s*:)/i,\n  'operator': /[+\\-*\\/]/\n});\nPrism.languages.insertBefore('less', 'property', {\n  'variable': [// Variable declaration (the colon must be consumed!)\n  {\n    pattern: /@[\\w-]+\\s*:/,\n    inside: {\n      \"punctuation\": /:/\n    }\n  }, // Variable usage\n  /@@?[\\w-]+/],\n  'mixin-usage': {\n    pattern: /([{;]\\s*)[.#](?!\\d)[\\w-]+.*?(?=[(;])/,\n    lookbehind: true,\n    alias: 'function'\n  }\n});\n/* \"prismjs/components/prism-makefile\" */\n\nPrism.languages.makefile = {\n  'comment': {\n    pattern: /(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/,\n    lookbehind: true\n  },\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  // Built-in target names\n  'builtin': /\\.[A-Z][^:#=\\s]+(?=\\s*:(?!=))/,\n  // Targets\n  'symbol': {\n    pattern: /^[^:=\\r\\n]+(?=\\s*:(?!=))/m,\n    inside: {\n      'variable': /\\$+(?:[^(){}:#=\\s]+|(?=[({]))/\n    }\n  },\n  'variable': /\\$+(?:[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,\n  'keyword': [// Directives\n  /-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/, // Functions\n  {\n    pattern: /(\\()(?:addsuffix|abspath|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:s|list)?)(?=[ \\t])/,\n    lookbehind: true\n  }],\n  'operator': /(?:::|[?:+!])?=|[|@]/,\n  'punctuation': /[:;(){}]/\n};\n/* \"prismjs/components/prism-objectivec\" */\n\nPrism.languages.objectivec = Prism.languages.extend('c', {\n  'keyword': /\\b(?:asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while|in|self|super)\\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\\b/,\n  'string': /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|@\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n  'operator': /-[->]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/@]/\n});\ndelete Prism.languages.objectivec['class-name'];\n/* \"prismjs/components/prism-ocaml\" */\n\nPrism.languages.ocaml = {\n  'comment': /\\(\\*[\\s\\S]*?\\*\\)/,\n  'string': [{\n    pattern: /\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\n    greedy: true\n  }, {\n    pattern: /(['`])(?:\\\\(?:\\d+|x[\\da-f]+|.)|(?!\\1)[^\\\\\\r\\n])\\1/i,\n    greedy: true\n  }],\n  'number': /\\b(?:0x[\\da-f][\\da-f_]+|(?:0[bo])?\\d[\\d_]*\\.?[\\d_]*(?:e[+-]?[\\d_]+)?)/i,\n  'type': {\n    pattern: /\\B['`]\\w*/,\n    alias: 'variable'\n  },\n  'directive': {\n    pattern: /\\B#\\w+/,\n    alias: 'function'\n  },\n  'keyword': /\\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|object|of|open|prefix|private|rec|then|sig|struct|to|try|type|val|value|virtual|where|while|with)\\b/,\n  'boolean': /\\b(?:false|true)\\b/,\n  // Custom operators are allowed\n  'operator': /:=|[=<>@^|&+\\-*\\/$%!?~][!$%&*+\\-.\\/:<=>?@^|~]*|\\b(?:and|asr|land|lor|lxor|lsl|lsr|mod|nor|or)\\b/,\n  'punctuation': /[(){}\\[\\]|_.,:;]/\n};\n/* \"prismjs/components/prism-python\" */\n\nPrism.languages.python = {\n  'comment': {\n    pattern: /(^|[^\\\\])#.*/,\n    lookbehind: true\n  },\n  'string-interpolation': {\n    pattern: /(?:f|rf|fr)(?:(\"\"\"|''')[\\s\\S]+?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2)/i,\n    greedy: true,\n    inside: {\n      'interpolation': {\n        // \"{\" <expression> <optional \"!s\", \"!r\", or \"!a\"> <optional \":\" format specifier> \"}\"\n        pattern: /((?:^|[^{])(?:{{)*){(?!{)(?:[^{}]|{(?!{)(?:[^{}]|{(?!{)(?:[^{}])+})+})+}/,\n        lookbehind: true,\n        inside: {\n          'format-spec': {\n            pattern: /(:)[^:(){}]+(?=}$)/,\n            lookbehind: true\n          },\n          'conversion-option': {\n            pattern: /![sra](?=[:}]$)/,\n            alias: 'punctuation'\n          },\n          rest: null\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  },\n  'triple-quoted-string': {\n    pattern: /(?:[rub]|rb|br)?(\"\"\"|''')[\\s\\S]+?\\1/i,\n    greedy: true,\n    alias: 'string'\n  },\n  'string': {\n    pattern: /(?:[rub]|rb|br)?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/i,\n    greedy: true\n  },\n  'function': {\n    pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\n    lookbehind: true\n  },\n  'class-name': {\n    pattern: /(\\bclass\\s+)\\w+/i,\n    lookbehind: true\n  },\n  'decorator': {\n    pattern: /(^\\s*)@\\w+(?:\\.\\w+)*/i,\n    lookbehind: true,\n    alias: ['annotation', 'punctuation'],\n    inside: {\n      'punctuation': /\\./\n    }\n  },\n  'keyword': /\\b(?:and|as|assert|async|await|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\\b/,\n  'builtin': /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\n  'boolean': /\\b(?:True|False|None)\\b/,\n  'number': /(?:\\b(?=\\d)|\\B(?=\\.))(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*\\.?\\d*|\\.\\d+)(?:e[+-]?\\d+)?j?\\b/i,\n  'operator': /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n  'punctuation': /[{}[\\];(),.:]/\n};\nPrism.languages.python['string-interpolation'].inside['interpolation'].inside.rest = Prism.languages.python;\nPrism.languages.py = Prism.languages.python;\n/* \"prismjs/components/prism-reason\" */\n\nPrism.languages.reason = Prism.languages.extend('clike', {\n  'comment': {\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n    lookbehind: true\n  },\n  'string': {\n    pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n    greedy: true\n  },\n  // 'class-name' must be matched *after* 'constructor' defined below\n  'class-name': /\\b[A-Z]\\w*/,\n  'keyword': /\\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\\b/,\n  'operator': /\\.{3}|:[:=]|\\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:mod|land|lor|lxor|lsl|lsr|asr)\\b/\n});\nPrism.languages.insertBefore('reason', 'class-name', {\n  'character': {\n    pattern: /'(?:\\\\x[\\da-f]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^'\\\\\\r\\n])'/,\n    alias: 'string'\n  },\n  'constructor': {\n    // Negative look-ahead prevents from matching things like String.capitalize\n    pattern: /\\b[A-Z]\\w*\\b(?!\\s*\\.)/,\n    alias: 'variable'\n  },\n  'label': {\n    pattern: /\\b[a-z]\\w*(?=::)/,\n    alias: 'symbol'\n  }\n}); // We can't match functions property, so let's not even try.\n\ndelete Prism.languages.reason.function;\n/* \"prismjs/components/prism-sass\" */\n\n(function (Prism) {\n  Prism.languages.sass = Prism.languages.extend('css', {\n    // Sass comments don't need to be closed, only indented\n    'comment': {\n      pattern: /^([ \\t]*)\\/[\\/*].*(?:(?:\\r?\\n|\\r)\\1[ \\t]+.+)*/m,\n      lookbehind: true\n    }\n  });\n  Prism.languages.insertBefore('sass', 'atrule', {\n    // We want to consume the whole line\n    'atrule-line': {\n      // Includes support for = and + shortcuts\n      pattern: /^(?:[ \\t]*)[@+=].+/m,\n      inside: {\n        'atrule': /(?:@[\\w-]+|[+=])/m\n      }\n    }\n  });\n  delete Prism.languages.sass.atrule;\n  var variable = /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/;\n  var operator = [/[+*\\/%]|[=!]=|<=?|>=?|\\b(?:and|or|not)\\b/, {\n    pattern: /(\\s+)-(?=\\s)/,\n    lookbehind: true\n  }];\n  Prism.languages.insertBefore('sass', 'property', {\n    // We want to consume the whole line\n    'variable-line': {\n      pattern: /^[ \\t]*\\$.+/m,\n      inside: {\n        'punctuation': /:/,\n        'variable': variable,\n        'operator': operator\n      }\n    },\n    // We want to consume the whole line\n    'property-line': {\n      pattern: /^[ \\t]*(?:[^:\\s]+ *:.*|:[^:\\s]+.*)/m,\n      inside: {\n        'property': [/[^:\\s]+(?=\\s*:)/, {\n          pattern: /(:)[^:\\s]+/,\n          lookbehind: true\n        }],\n        'punctuation': /:/,\n        'variable': variable,\n        'operator': operator,\n        'important': Prism.languages.sass.important\n      }\n    }\n  });\n  delete Prism.languages.sass.property;\n  delete Prism.languages.sass.important; // Now that whole lines for other patterns are consumed,\n  // what's left should be selectors\n\n  Prism.languages.insertBefore('sass', 'punctuation', {\n    'selector': {\n      pattern: /([ \\t]*)\\S(?:,?[^,\\r\\n]+)*(?:,(?:\\r?\\n|\\r)\\1[ \\t]+\\S(?:,?[^,\\r\\n]+)*)*/,\n      lookbehind: true\n    }\n  });\n})(Prism);\n/* \"prismjs/components/prism-scss\" */\n\n\nPrism.languages.scss = Prism.languages.extend('css', {\n  'comment': {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n    lookbehind: true\n  },\n  'atrule': {\n    pattern: /@[\\w-]+(?:\\([^()]+\\)|[^(])*?(?=\\s+[{;])/,\n    inside: {\n      'rule': /@[\\w-]+/ // See rest below\n\n    }\n  },\n  // url, compassified\n  'url': /(?:[-a-z]+-)?url(?=\\()/i,\n  // CSS selector regex is not appropriate for Sass\n  // since there can be lot more things (var, @ directive, nesting..)\n  // a selector must start at the end of a property or after a brace (end of other rules or nesting)\n  // it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable\n  // the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var\n  // can \"pass\" as a selector- e.g: proper#{$erty})\n  // this one was hard to do, so please be careful if you edit this one :)\n  'selector': {\n    // Initial look-ahead is used to prevent matching of blank selectors\n    pattern: /(?=\\S)[^@;{}()]?(?:[^@;{}()]|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}]+[:{][^}]+))/m,\n    inside: {\n      'parent': {\n        pattern: /&/,\n        alias: 'important'\n      },\n      'placeholder': /%[-\\w]+/,\n      'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  },\n  'property': {\n    pattern: /(?:[\\w-]|\\$[-\\w]+|#\\{\\$[-\\w]+\\})+(?=\\s*:)/,\n    inside: {\n      'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  }\n});\nPrism.languages.insertBefore('scss', 'atrule', {\n  'keyword': [/@(?:if|else(?: if)?|for|each|while|import|extend|debug|warn|mixin|include|function|return|content)/i, {\n    pattern: /( +)(?:from|through)(?= )/,\n    lookbehind: true\n  }]\n});\nPrism.languages.insertBefore('scss', 'important', {\n  // var and interpolated vars\n  'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n});\nPrism.languages.insertBefore('scss', 'function', {\n  'placeholder': {\n    pattern: /%[-\\w]+/,\n    alias: 'selector'\n  },\n  'statement': {\n    pattern: /\\B!(?:default|optional)\\b/i,\n    alias: 'keyword'\n  },\n  'boolean': /\\b(?:true|false)\\b/,\n  'null': {\n    pattern: /\\bnull\\b/,\n    alias: 'keyword'\n  },\n  'operator': {\n    pattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|or|not)(?=\\s)/,\n    lookbehind: true\n  }\n});\nPrism.languages.scss['atrule'].inside.rest = Prism.languages.scss;\n/* \"prismjs/components/prism-sql\" */\n\nPrism.languages.sql = {\n  'comment': {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\n    lookbehind: true\n  },\n  'variable': [{\n    pattern: /@([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1/,\n    greedy: true\n  }, /@[\\w.$]+/],\n  'string': {\n    pattern: /(^|[^@\\\\])(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\]|\\2\\2)*\\2/,\n    greedy: true,\n    lookbehind: true\n  },\n  'function': /\\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\\s*\\()/i,\n  // Should we highlight user defined functions too?\n  'keyword': /\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:_INSERT|COL)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURNS?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\\b/i,\n  'boolean': /\\b(?:TRUE|FALSE|NULL)\\b/i,\n  'number': /\\b0x[\\da-f]+\\b|\\b\\d+\\.?\\d*|\\B\\.\\d+\\b/i,\n  'operator': /[-+*\\/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|IN|LIKE|NOT|OR|IS|DIV|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i,\n  'punctuation': /[;[\\]()`,.]/\n};\n/* \"prismjs/components/prism-stylus\" */\n\n(function (Prism) {\n  var inside = {\n    'url': /url\\(([\"']?).*?\\1\\)/i,\n    'string': {\n      pattern: /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n      greedy: true\n    },\n    'interpolation': null,\n    // See below\n    'func': null,\n    // See below\n    'important': /\\B!(?:important|optional)\\b/i,\n    'keyword': {\n      pattern: /(^|\\s+)(?:(?:if|else|for|return|unless)(?=\\s+|$)|@[\\w-]+)/,\n      lookbehind: true\n    },\n    'hexcode': /#[\\da-f]{3,6}/i,\n    'number': /\\b\\d+(?:\\.\\d+)?%?/,\n    'boolean': /\\b(?:true|false)\\b/,\n    'operator': [// We want non-word chars around \"-\" because it is\n    // accepted in property names.\n    /~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.+|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/],\n    'punctuation': /[{}()\\[\\];:,]/\n  };\n  inside['interpolation'] = {\n    pattern: /\\{[^\\r\\n}:]+\\}/,\n    alias: 'variable',\n    inside: {\n      'delimiter': {\n        pattern: /^{|}$/,\n        alias: 'punctuation'\n      },\n      rest: inside\n    }\n  };\n  inside['func'] = {\n    pattern: /[\\w-]+\\([^)]*\\).*/,\n    inside: {\n      'function': /^[^(]+/,\n      rest: inside\n    }\n  };\n  Prism.languages.stylus = {\n    'comment': {\n      pattern: /(^|[^\\\\])(\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true\n    },\n    'atrule-declaration': {\n      pattern: /(^\\s*)@.+/m,\n      lookbehind: true,\n      inside: {\n        'atrule': /^@[\\w-]+/,\n        rest: inside\n      }\n    },\n    'variable-declaration': {\n      pattern: /(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:(?:\\{[^}]*\\}|.+)|$)/m,\n      lookbehind: true,\n      inside: {\n        'variable': /^\\S+/,\n        rest: inside\n      }\n    },\n    'statement': {\n      pattern: /(^[ \\t]*)(?:if|else|for|return|unless)[ \\t]+.+/m,\n      lookbehind: true,\n      inside: {\n        keyword: /^\\S+/,\n        rest: inside\n      }\n    },\n    // A property/value pair cannot end with a comma or a brace\n    // It cannot have indented content unless it ended with a semicolon\n    'property-declaration': {\n      pattern: /((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)[^{\\r\\n]*(?:;|[^{\\r\\n,](?=$)(?!(\\r?\\n|\\r)(?:\\{|\\2[ \\t]+)))/m,\n      lookbehind: true,\n      inside: {\n        'property': {\n          pattern: /^[^\\s:]+/,\n          inside: {\n            'interpolation': inside.interpolation\n          }\n        },\n        rest: inside\n      }\n    },\n    // A selector can contain parentheses only as part of a pseudo-element\n    // It can span multiple lines.\n    // It must end with a comma or an accolade or have indented content.\n    'selector': {\n      pattern: /(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\))?|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\))?|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t]+)))/m,\n      lookbehind: true,\n      inside: {\n        'interpolation': inside.interpolation,\n        'punctuation': /[{},]/\n      }\n    },\n    'func': inside.func,\n    'string': inside.string,\n    'interpolation': inside.interpolation,\n    'punctuation': /[{}()\\[\\];:.]/\n  };\n})(Prism);\n/* \"prismjs/components/prism-tsx\" */\n\n\nvar typescript = Prism.util.clone(Prism.languages.typescript);\nPrism.languages.tsx = Prism.languages.extend('jsx', typescript);\n/* \"prismjs/components/prism-wasm\" */\n\nPrism.languages.wasm = {\n  'comment': [/\\(;[\\s\\S]*?;\\)/, {\n    pattern: /;;.*/,\n    greedy: true\n  }],\n  'string': {\n    pattern: /\"(?:\\\\[\\s\\S]|[^\"\\\\])*\"/,\n    greedy: true\n  },\n  'keyword': [{\n    pattern: /\\b(?:align|offset)=/,\n    inside: {\n      'operator': /=/\n    }\n  }, {\n    pattern: /\\b(?:(?:f32|f64|i32|i64)(?:\\.(?:abs|add|and|ceil|clz|const|convert_[su]\\/i(?:32|64)|copysign|ctz|demote\\/f64|div(?:_[su])?|eqz?|extend_[su]\\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|nearest|neg?|or|popcnt|promote\\/f32|reinterpret\\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|store(?:8|16|32)?|sqrt|sub|trunc(?:_[su]\\/f(?:32|64))?|wrap\\/i64|xor))?|memory\\.(?:grow|size))\\b/,\n    inside: {\n      'punctuation': /\\./\n    }\n  }, /\\b(?:anyfunc|block|br(?:_if|_table)?|call(?:_indirect)?|data|drop|elem|else|end|export|func|get_(?:global|local)|global|if|import|local|loop|memory|module|mut|nop|offset|param|result|return|select|set_(?:global|local)|start|table|tee_local|then|type|unreachable)\\b/],\n  'variable': /\\$[\\w!#$%&'*+\\-./:<=>?@\\\\^_`|~]+/i,\n  'number': /[+-]?\\b(?:\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:[eE][+-]?\\d(?:_?\\d)*)?|0x[\\da-fA-F](?:_?[\\da-fA-F])*(?:\\.[\\da-fA-F](?:_?[\\da-fA-D])*)?(?:[pP][+-]?\\d(?:_?\\d)*)?)\\b|\\binf\\b|\\bnan(?::0x[\\da-fA-F](?:_?[\\da-fA-D])*)?\\b/,\n  'punctuation': /[()]/\n};\n/* \"prismjs/components/prism-yaml\" */\n\nPrism.languages.yaml = {\n  'scalar': {\n    pattern: /([\\-:]\\s*(?:![^\\s]+)?[ \\t]*[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)[^\\r\\n]+(?:\\2[^\\r\\n]+)*)/,\n    lookbehind: true,\n    alias: 'string'\n  },\n  'comment': /#.*/,\n  'key': {\n    pattern: /(\\s*(?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:![^\\s]+)?[ \\t]*)[^\\r\\n{[\\]},#\\s]+?(?=\\s*:\\s)/,\n    lookbehind: true,\n    alias: 'atrule'\n  },\n  'directive': {\n    pattern: /(^[ \\t]*)%.+/m,\n    lookbehind: true,\n    alias: 'important'\n  },\n  'datetime': {\n    pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?)?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?)(?=[ \\t]*(?:$|,|]|}))/m,\n    lookbehind: true,\n    alias: 'number'\n  },\n  'boolean': {\n    pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:true|false)[ \\t]*(?=$|,|]|})/im,\n    lookbehind: true,\n    alias: 'important'\n  },\n  'null': {\n    pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:null|~)[ \\t]*(?=$|,|]|})/im,\n    lookbehind: true,\n    alias: 'important'\n  },\n  'string': {\n    pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(\"|')(?:(?!\\2)[^\\\\\\r\\n]|\\\\.)*\\2(?=[ \\t]*(?:$|,|]|}|\\s*#))/m,\n    lookbehind: true,\n    greedy: true\n  },\n  'number': {\n    pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+\\.?\\d*|\\.?\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)[ \\t]*(?=$|,|]|})/im,\n    lookbehind: true\n  },\n  'tag': /![^\\s]+/,\n  'important': /[&*][\\w]+/,\n  'punctuation': /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n};\nPrism.languages.yml = Prism.languages.yaml;\nexport default Prism;","import Prism from '../prism/index.js';\nexport { default as Prism } from '../prism/index.js';\nimport theme from '../themes/duotoneDark';\nimport { Component } from 'react';\nvar defaultProps = {\n  // $FlowFixMe\n  Prism: Prism,\n  theme: theme\n};\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar newlineRe = /\\r\\n|\\r|\\n/; // Empty lines need to contain a single empty token, denoted with { empty: true }\n\nvar normalizeEmptyLines = function normalizeEmptyLines(line) {\n  if (line.length === 0) {\n    line.push({\n      types: [\"plain\"],\n      content: \"\",\n      empty: true\n    });\n  } else if (line.length === 1 && line[0].content === \"\") {\n    line[0].empty = true;\n  }\n};\n\nvar appendTypes = function appendTypes(types, add) {\n  var typesSize = types.length;\n\n  if (typesSize > 0 && types[typesSize - 1] === add) {\n    return types;\n  }\n\n  return types.concat(add);\n}; // Takes an array of Prism's tokens and groups them by line, turning plain\n// strings into tokens as well. Tokens can become recursive in some cases,\n// which means that their types are concatenated. Plain-string tokens however\n// are always of type \"plain\".\n// This is not recursive to avoid exceeding the call-stack limit, since it's unclear\n// how nested Prism's tokens can become\n\n\nvar normalizeTokens = function normalizeTokens(tokens) {\n  var typeArrStack = [[]];\n  var tokenArrStack = [tokens];\n  var tokenArrIndexStack = [0];\n  var tokenArrSizeStack = [tokens.length];\n  var i = 0;\n  var stackIndex = 0;\n  var currentLine = [];\n  var acc = [currentLine];\n\n  while (stackIndex > -1) {\n    while ((i = tokenArrIndexStack[stackIndex]++) < tokenArrSizeStack[stackIndex]) {\n      var content = void 0;\n      var types = typeArrStack[stackIndex];\n      var tokenArr = tokenArrStack[stackIndex];\n      var token = tokenArr[i]; // Determine content and append type to types if necessary\n\n      if (typeof token === \"string\") {\n        types = stackIndex > 0 ? types : [\"plain\"];\n        content = token;\n      } else {\n        types = appendTypes(types, token.type);\n\n        if (token.alias) {\n          types = appendTypes(types, token.alias);\n        }\n\n        content = token.content;\n      } // If token.content is an array, increase the stack depth and repeat this while-loop\n\n\n      if (typeof content !== \"string\") {\n        stackIndex++;\n        typeArrStack.push(types);\n        tokenArrStack.push(content);\n        tokenArrIndexStack.push(0);\n        tokenArrSizeStack.push(content.length);\n        continue;\n      } // Split by newlines\n\n\n      var splitByNewlines = content.split(newlineRe);\n      var newlineCount = splitByNewlines.length;\n      currentLine.push({\n        types: types,\n        content: splitByNewlines[0]\n      }); // Create a new line for each string on a new line\n\n      for (var i$1 = 1; i$1 < newlineCount; i$1++) {\n        normalizeEmptyLines(currentLine);\n        acc.push(currentLine = []);\n        currentLine.push({\n          types: types,\n          content: splitByNewlines[i$1]\n        });\n      }\n    } // Decreate the stack depth\n\n\n    stackIndex--;\n    typeArrStack.pop();\n    tokenArrStack.pop();\n    tokenArrIndexStack.pop();\n    tokenArrSizeStack.pop();\n  }\n\n  normalizeEmptyLines(currentLine);\n  return acc;\n};\n\nvar themeToDict = function themeToDict(theme, language) {\n  var plain = theme.plain; // $FlowFixMe\n\n  var base = Object.create(null);\n  var themeDict = theme.styles.reduce(function (acc, themeEntry) {\n    var languages = themeEntry.languages;\n    var style = themeEntry.style;\n\n    if (languages && !languages.includes(language)) {\n      return acc;\n    }\n\n    themeEntry.types.forEach(function (type) {\n      // $FlowFixMe\n      var accStyle = _extends({}, acc[type], style);\n\n      acc[type] = accStyle;\n    });\n    return acc;\n  }, base); // $FlowFixMe\n\n  themeDict.root = plain; // $FlowFixMe\n\n  themeDict.plain = _extends({}, plain, {\n    backgroundColor: null\n  });\n  return themeDict;\n};\n\nfunction objectWithoutProperties(obj, exclude) {\n  var target = {};\n\n  for (var k in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, k) && exclude.indexOf(k) === -1) target[k] = obj[k];\n  }\n\n  return target;\n}\n\nvar Highlight = /*@__PURE__*/function (Component) {\n  function Highlight() {\n    var this$1 = this;\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    Component.apply(this, args);\n\n    _defineProperty(this, \"getThemeDict\", function (props) {\n      if (this$1.themeDict !== undefined && props.theme === this$1.prevTheme && props.language === this$1.prevLanguage) {\n        return this$1.themeDict;\n      }\n\n      this$1.prevTheme = props.theme;\n      this$1.prevLanguage = props.language;\n      var themeDict = props.theme ? themeToDict(props.theme, props.language) : undefined;\n      return this$1.themeDict = themeDict;\n    });\n\n    _defineProperty(this, \"getLineProps\", function (ref) {\n      var key = ref.key;\n      var className = ref.className;\n      var style = ref.style;\n      var rest$1 = objectWithoutProperties(ref, [\"key\", \"className\", \"style\", \"line\"]);\n      var rest = rest$1;\n\n      var output = _extends({}, rest, {\n        className: \"token-line\",\n        style: undefined,\n        key: undefined\n      });\n\n      var themeDict = this$1.getThemeDict(this$1.props);\n\n      if (themeDict !== undefined) {\n        output.style = themeDict.plain;\n      }\n\n      if (style !== undefined) {\n        output.style = output.style !== undefined ? _extends({}, output.style, style) : style;\n      }\n\n      if (key !== undefined) {\n        output.key = key;\n      }\n\n      if (className) {\n        output.className += \" \" + className;\n      }\n\n      return output;\n    });\n\n    _defineProperty(this, \"getStyleForToken\", function (ref) {\n      var types = ref.types;\n      var empty = ref.empty;\n      var typesSize = types.length;\n      var themeDict = this$1.getThemeDict(this$1.props);\n\n      if (themeDict === undefined) {\n        return undefined;\n      } else if (typesSize === 1 && types[0] === \"plain\") {\n        return empty ? {\n          display: \"inline-block\"\n        } : undefined;\n      } else if (typesSize === 1 && !empty) {\n        return themeDict[types[0]];\n      }\n\n      var baseStyle = empty ? {\n        display: \"inline-block\"\n      } : {}; // $FlowFixMe\n\n      var typeStyles = types.map(function (type) {\n        return themeDict[type];\n      });\n      return Object.assign.apply(Object, [baseStyle].concat(typeStyles));\n    });\n\n    _defineProperty(this, \"getTokenProps\", function (ref) {\n      var key = ref.key;\n      var className = ref.className;\n      var style = ref.style;\n      var token = ref.token;\n      var rest$1 = objectWithoutProperties(ref, [\"key\", \"className\", \"style\", \"token\"]);\n      var rest = rest$1;\n\n      var output = _extends({}, rest, {\n        className: \"token \" + token.types.join(\" \"),\n        children: token.content,\n        style: this$1.getStyleForToken(token),\n        key: undefined\n      });\n\n      if (style !== undefined) {\n        output.style = output.style !== undefined ? _extends({}, output.style, style) : style;\n      }\n\n      if (key !== undefined) {\n        output.key = key;\n      }\n\n      if (className) {\n        output.className += \" \" + className;\n      }\n\n      return output;\n    });\n  }\n\n  if (Component) Highlight.__proto__ = Component;\n  Highlight.prototype = Object.create(Component && Component.prototype);\n  Highlight.prototype.constructor = Highlight;\n\n  Highlight.prototype.render = function render() {\n    var ref = this.props;\n    var Prism = ref.Prism;\n    var language = ref.language;\n    var code = ref.code;\n    var children = ref.children;\n    var themeDict = this.getThemeDict(this.props);\n    var grammar = Prism.languages[language];\n    var mixedTokens = grammar !== undefined ? Prism.tokenize(code, grammar, language) : [code];\n    var tokens = normalizeTokens(mixedTokens);\n    return children({\n      tokens: tokens,\n      className: \"prism-code language-\" + language,\n      style: themeDict !== undefined ? themeDict.root : {},\n      getLineProps: this.getLineProps,\n      getTokenProps: this.getTokenProps\n    });\n  };\n\n  return Highlight;\n}(Component);\n\nexport default Highlight;\nexport { defaultProps };","// Duotone Dark\n// Author: Simurai, adapted from DuoTone themes for Atom (http://simurai.com/projects/2016/01/01/duotone-themes)\n// Conversion: Bram de Haan (http://atelierbram.github.io/Base2Tone-prism/output/prism/prism-base2tone-evening-dark.css)\n// Generated with Base16 Builder (https://github.com/base16-builder/base16-builder)\nvar theme = {\n  plain: {\n    backgroundColor: \"#2a2734\",\n    color: \"#9a86fd\"\n  },\n  styles: [{\n    types: [\"comment\", \"prolog\", \"doctype\", \"cdata\", \"punctuation\"],\n    style: {\n      color: \"#6c6783\"\n    }\n  }, {\n    types: [\"namespace\"],\n    style: {\n      opacity: 0.7\n    }\n  }, {\n    types: [\"tag\", \"operator\", \"number\"],\n    style: {\n      color: \"#e09142\"\n    }\n  }, {\n    types: [\"property\", \"function\"],\n    style: {\n      color: \"#9a86fd\"\n    }\n  }, {\n    types: [\"tag-id\", \"selector\", \"atrule-id\"],\n    style: {\n      color: \"#eeebff\"\n    }\n  }, {\n    types: [\"attr-name\"],\n    style: {\n      color: \"#c4b9fe\"\n    }\n  }, {\n    types: [\"boolean\", \"string\", \"entity\", \"url\", \"attr-value\", \"keyword\", \"control\", \"directive\", \"unit\", \"statement\", \"regex\", \"at-rule\", \"placeholder\", \"variable\"],\n    style: {\n      color: \"#ffcc99\"\n    }\n  }, {\n    types: [\"deleted\"],\n    style: {\n      textDecorationLine: \"line-through\"\n    }\n  }, {\n    types: [\"inserted\"],\n    style: {\n      textDecorationLine: \"underline\"\n    }\n  }, {\n    types: [\"italic\"],\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"important\", \"bold\"],\n    style: {\n      fontWeight: \"bold\"\n    }\n  }, {\n    types: [\"important\"],\n    style: {\n      color: \"#c4b9fe\"\n    }\n  }]\n};\nexport default theme;","// Oceanic Next\n// Author: Dmitri Voronianski (https://github.com/voronianski)\n// https://github.com/voronianski/oceanic-next-color-scheme\n// Adapted from: https://github.com/reactjs/reactjs.org/blob/428d52b/src/prism-styles.js\nvar colors = {\n  char: \"#D8DEE9\",\n  comment: \"#999999\",\n  keyword: \"#c5a5c5\",\n  primitive: \"#5a9bcf\",\n  string: \"#8dc891\",\n  variable: \"#d7deea\",\n  boolean: \"#ff8b50\",\n  punctuation: \"#5FB3B3\",\n  tag: \"#fc929e\",\n  function: \"#79b6f2\",\n  className: \"#FAC863\",\n  method: \"#6699CC\",\n  operator: \"#fc929e\"\n};\nvar theme = {\n  plain: {\n    backgroundColor: \"#282c34\",\n    color: \"#ffffff\"\n  },\n  styles: [{\n    types: [\"attr-name\"],\n    style: {\n      color: colors.keyword\n    }\n  }, {\n    types: [\"attr-value\"],\n    style: {\n      color: colors.string\n    }\n  }, {\n    types: [\"comment\", \"block-comment\", \"prolog\", \"doctype\", \"cdata\", \"shebang\"],\n    style: {\n      color: colors.comment\n    }\n  }, {\n    types: [\"property\", \"number\", \"function-name\", \"constant\", \"symbol\", \"deleted\"],\n    style: {\n      color: colors.primitive\n    }\n  }, {\n    types: [\"boolean\"],\n    style: {\n      color: colors.boolean\n    }\n  }, {\n    types: [\"tag\"],\n    style: {\n      color: colors.tag\n    }\n  }, {\n    types: [\"string\"],\n    style: {\n      color: colors.string\n    }\n  }, {\n    types: [\"punctuation\"],\n    style: {\n      color: colors.string\n    }\n  }, {\n    types: [\"selector\", \"char\", \"builtin\", \"inserted\"],\n    style: {\n      color: colors.char\n    }\n  }, {\n    types: [\"function\"],\n    style: {\n      color: colors.function\n    }\n  }, {\n    types: [\"operator\", \"entity\", \"url\", \"variable\"],\n    style: {\n      color: colors.variable\n    }\n  }, {\n    types: [\"keyword\"],\n    style: {\n      color: colors.keyword\n    }\n  }, {\n    types: [\"at-rule\", \"class-name\"],\n    style: {\n      color: colors.className\n    }\n  }, {\n    types: [\"important\"],\n    style: {\n      fontWeight: \"400\"\n    }\n  }, {\n    types: [\"bold\"],\n    style: {\n      fontWeight: \"bold\"\n    }\n  }, {\n    types: [\"italic\"],\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"namespace\"],\n    style: {\n      opacity: 0.7\n    }\n  }]\n};\nexport default theme;","import React, { FunctionComponent } from \"react\"\nimport Highlight, { defaultProps } from \"prism-react-renderer\"\nimport github from \"prism-react-renderer/themes/oceanicNext\"\n\ninterface SyntaxHighlighterProps {\n  children: string\n  className: string\n}\n\nconst SyntaxHighlighter: FunctionComponent<SyntaxHighlighterProps> = (\n  props: SyntaxHighlighterProps\n) => {\n  const matches = props.className.match(/language-(?<lang>.*)/)\n  const language =\n    matches && matches.groups && matches.groups.lang ? matches.groups.lang : \"\"\n  return (\n    <Highlight\n      {...defaultProps}\n      code={props.children.trim()}\n      //@ts-ignore\n      language={language}\n      theme={github}\n    >\n      {({ className, style, tokens, getLineProps, getTokenProps }) => (\n        <div className={`${className} syntax-highlight`} style={style}>\n          {tokens.map((line, i) => (\n            <div key={i} {...getLineProps({ line, key: i })}>\n              {line.map((token, key) => (\n                <span key={key} {...getTokenProps({ token, key })} />\n              ))}\n            </div>\n          ))}\n        </div>\n      )}\n    </Highlight>\n  )\n}\n\nexport default SyntaxHighlighter\n","import React, { ReactNode } from 'react';\nimport { MDXProvider } from '@mdx-js/react';\nimport SyntaxHighligther from './syntaxHighlight';\n\nconst Components = {\n  code: SyntaxHighligther,\n};\n\ninterface MDXStylerProps {\n  children: ReactNode;\n}\n\nconst MDXStyler: React.FC<MDXStylerProps> = (props: MDXStylerProps) => (\n  <MDXProvider components={Components}>{props.children}</MDXProvider>\n);\n\nexport default MDXStyler;","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\"\nimport { ReactNode } from \"react\"\nimport Header from \"../header\"\nimport Layout from \"../layout\"\nimport MDXStyler from \"./mdxStyler\"\n\ninterface PostPageProps {\n  children: ReactNode\n  pageContext: {\n    frontmatter: {\n      title: string\n      date: string\n    }\n  }\n}\n\nconst postStyles = css`\n  margin: 30px auto 0 auto;\n  max-width: 900px;\n  padding: 0 30px 140px 30px;\n  .post__content {\n    margin-top: 60px;\n  }\n  .post__heading {\n    margin-bottom: 10px;\n  }\n  .post__date {\n    font-size: 14px;\n  }\n  .syntax-highlight {\n    padding: 20px;\n    font-family: SF Mono, sans-serif;\n    font-size: 16px;\n    line-height: 1.6em;\n  }\n  code {\n    font-family: inherit;\n    background: #dedede;\n    border-radius: 2px;\n    padding: 0 5px;\n    font-size: 14px;\n  }\n  a {\n    text-decoration: none;\n    color: #0000ee;\n  }\n  h1, h2, h3, h4 {\n    a {\n      color: #000;\n    }\n  }\n`\n\nconst PostPage: React.FC<PostPageProps> = (props: PostPageProps) => {\n  const context = props.pageContext.frontmatter\n  return (\n    <Layout title={context.title}>\n      <div>\n        <div css={postStyles}>\n          <Header />\n          <div className=\"post__content\">\n            <h1 className=\"post__heading\">{context.title}</h1>\n            <p className=\"post__date\">{context.date}</p>\n            <MDXStyler>{props.children}</MDXStyler>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  )\n}\nexport default PostPage\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/shaminmeerankutty/Personal/blog/src/components/markdown/post.tsx\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`I wanted to create a blog for a long time and I also wanted to start it from scratch. So I did a quick research on the stacks I can use.\nI was familiar with `}<a parentName=\"p\" {...{\n        \"href\": \"https://gatsby.com\"\n      }}>{`Gatsby`}</a>{`, it is an amazing tool which can be used to generate static html files. The best thing about\nthe gatsby is you can write the code in React and it will create static html files for you. `}</p>\n    <p>{`The main thing to care about writing a blog is to SEO, nobody\nwant's to write a blog that is hidden from outside world. Writing it in React directly with CRA or a custom webpack configuration doesn't directly supports\nserver side rendering. So you will need to have additional tools like Next.js for doing this.`}</p>\n    <p>{`Another good thing about having static html files is you can deploy it easlily with some services like `}<a parentName=\"p\" {...{\n        \"href\": \"netlify.com\"\n      }}>{`Netlify`}</a>{`, `}<a parentName=\"p\" {...{\n        \"href\": \"https://surge.sh/\"\n      }}>{`Surge`}</a>{` etc. or you can use github pages.\nThere are a lot of good articles on how to setup a continous deployment (CD) to these systems using github actions and travis.`}</p>\n    <p>{`Also gatsby have a lot of cool plugins which can help you create awesome blogs. I can list some of them which I used.`}</p>\n    <h2>{`Gatsby plugins I used.`}</h2>\n    <h3><a parentName=\"h3\" {...{\n        \"href\": \"https://www.gatsbyjs.com/plugins/gatsby-plugin-react-helmet/\"\n      }}>{`gatsby-plugin-react-helmet`}</a></h3>\n    <p>{`This plugin helps you make your SEO better by updating the title and description dynamically and also setting the meta tags.\nYou can see my `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/shamin/shamin.github.io/blob/master/src/components/seo.tsx\"\n      }}>{`seo.tsx`}</a>{` file to know more about how I set it up. This plugin uses `}<inlineCode parentName=\"p\">{`react-helmet`}</inlineCode>{` underneath.`}</p>\n    <h3><a parentName=\"h3\" {...{\n        \"href\": \"https://www.gatsbyjs.com/plugins/gatsby-source-filesystem/\"\n      }}>{`gatsby-source-filesystem`}</a></h3>\n    <p>{`Gatsby's filesystem plugin is one of the commonly used plugin. Usually it is used if one of the plugins or your custom plugin need to read some files in source.\nLike, for example In our case we want our `}<inlineCode parentName=\"p\">{`gatsby-plugin-mdx`}</inlineCode>{` to read all the `}<inlineCode parentName=\"p\">{`mdx`}</inlineCode>{` files, so I have set filesystem to read the `}<inlineCode parentName=\"p\">{`posts`}</inlineCode>{` folder which contain all\nmy mdx files.`}</p>\n    <h3><a parentName=\"h3\" {...{\n        \"href\": \"https://www.gatsbyjs.com/plugins/gatsby-plugin-mdx/\"\n      }}>{`gatsby-plugin-mdx`}</a></h3>\n    <p>{`This is an amazing gatsby plugin which lets you write pages in `}<inlineCode parentName=\"p\">{`mdx`}</inlineCode>{` format. `}<inlineCode parentName=\"p\">{`mdx`}</inlineCode>{` is a superset of markdown which supports `}<inlineCode parentName=\"p\">{`jsx`}</inlineCode>{`. That means you can import and\nuse react components along with markdown. This plugin takes care of everything and render the `}<inlineCode parentName=\"p\">{`mdx`}</inlineCode>{` to a page.`}</p>\n    <h3><a parentName=\"h3\" {...{\n        \"href\": \"https://www.gatsbyjs.com/plugins/gatsby-plugin-manifest/\"\n      }}>{`gatsby-plugin-manifest`}</a></h3>\n    <p>{`This plugin is used to create a manifest file for your web application. This is mostly useful for creating PWA apps, but I used it because I want to generate the favicons\nand icons.`}</p>\n    <p>{`These were the gatsby plugins I used. Apart from this I have used 2 other thirdparty libraries. This include emotion and prism js.`}</p>\n    <h2>{`Other libraries I used.`}</h2>\n    <h3><a parentName=\"h3\" {...{\n        \"href\": \"https://emotion.sh/\"\n      }}>{`Emotion`}</a></h3>\n    <p>{`I am big fan of css and I believe that a frontend developer show definetly have a solid css understanding. Emotion is css-in-js library which helps you write\nscoped css. One of the major benefits of using a scoped css is if you are ever going to remove a component file it will thereby remove the css also.\nSo you don't have to go into other files and remove it. It also have great benefits if you are writing shared components.`}</p>\n    <h3><a parentName=\"h3\" {...{\n        \"href\": \"https://prismjs.com/\"\n      }}>{`Prism js`}</a></h3>\n    <p>{`I am actually using a React version of this library called `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/FormidableLabs/prism-react-renderer\"\n      }}>{`prism-react-renderer`}</a>{`. It helps in syntax highlighting the code blocks. So I have created a mapping\nin my `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/shamin/shamin.github.io/blob/master/src/components/markdown/mdxStyler.tsx\"\n      }}>{`mdxStyler.tsx`}</a>{` file which maps my code component to a syntax hightlight component which uses prism-react-renderer. Prism js also comes with some awesome\nthemes.`}</p>\n    <p>{`I will be constantly improving this blog and I will try to update this post about the changes I make in the future. Thanks for reading.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\"\nimport { Link } from \"gatsby\"\n\nconst headerStyles = css`\n  font-size: 40px;\n  a {\n    text-decoration: none;\n  }\n`\n\nexport default function Header() {\n  return (\n    <div css={headerStyles}>\n      <Link to=\"/\">🏠</Link>\n    </div>\n  )\n}\n"],"sourceRoot":""}