{"version":3,"sources":["webpack:///./src/pages/blog/posts/11-2020/how-i-created-this-blog.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"8OAQaA,EAAe,GACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,sLACkB,+BAAGC,WAAW,KAAQ,CACpC,KAAQ,uBADM,UADlB,+LAKA,kVAGA,+HAA8G,+BAAGA,WAAW,KAAQ,CAChI,KAAQ,gBADkG,WAA9G,KAE0B,+BAAGA,WAAW,KAAQ,CAC5C,KAAQ,sBADc,SAF1B,sKAMA,8IACA,gDACA,sBAAI,+BAAGA,WAAW,MAAS,CACvB,KAAQ,iEADR,+BAGJ,qKACa,+BAAGA,WAAW,KAAQ,CAC/B,KAAQ,kFADC,WADb,8DAGmF,0BAAYA,WAAW,KAAvB,gBAHnF,gBAIA,sBAAI,+BAAGA,WAAW,MAAS,CACvB,KAAQ,+DADR,6BAGJ,oOACwC,0BAAYA,WAAW,KAAvB,qBADxC,oBAC0H,0BAAYA,WAAW,KAAvB,OAD1H,gDAC0N,0BAAYA,WAAW,KAAvB,SAD1N,4CAGA,sBAAI,+BAAGA,WAAW,MAAS,CACvB,KAAQ,wDADR,sBAGJ,uFAAsE,0BAAYA,WAAW,KAAvB,OAAtE,YAAkI,0BAAYA,WAAW,KAAvB,OAAlI,6CAA+N,0BAAYA,WAAW,KAAvB,OAA/N,kIAC4F,0BAAYA,WAAW,KAAvB,OAD5F,eAEA,sBAAI,+BAAGA,WAAW,MAAS,CACvB,KAAQ,6DADR,2BAGJ,+MAEA,2JACA,iDACA,sBAAI,+BAAGA,WAAW,MAAS,CACvB,KAAQ,wBADR,YAGJ,ucAGA,sBAAI,+BAAGA,WAAW,MAAS,CACvB,KAAQ,yBADR,aAGJ,mFAAkE,+BAAGA,WAAW,KAAQ,CACpF,KAAQ,2DADsD,wBAAlE,yFAGI,+BAAGA,WAAW,KAAQ,CACtB,KAAQ,iGADR,iBAHJ,uJAOA,iKAKJJ,EAAWK,gBAAiB","file":"component---src-pages-blog-posts-11-2020-how-i-created-this-blog-mdx-2805791ee9a827bb1b0c.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/shaminmeerankutty/Personal/shamin.github.io/src/components/markdown/post.tsx\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`I wanted to create a blog for a long time and I also wanted to start it from scratch. So I did a quick research on the stacks I can use.\nI was familiar with `}<a parentName=\"p\" {...{\n        \"href\": \"https://gatsby.com\"\n      }}>{`Gatsby`}</a>{`, it is an amazing tool which can be used to generate static html files. The best thing about\nthe gatsby is you can write the code in React and it will create static html files for you. `}</p>\n    <p>{`The main thing to care about writing a blog is to SEO, nobody\nwant's to write a blog that is hidden from outside world. Writing it in React directly with CRA or a custom webpack configuration doesn't directly supports\nserver side rendering. So you will need to have additional tools like Next.js for doing this.`}</p>\n    <p>{`Another good thing about having static html files is you can deploy it easlily with some services like `}<a parentName=\"p\" {...{\n        \"href\": \"netlify.com\"\n      }}>{`Netlify`}</a>{`, `}<a parentName=\"p\" {...{\n        \"href\": \"https://surge.sh/\"\n      }}>{`Surge`}</a>{` etc. or you can use github pages.\nThere are a lot of good articles on how to setup a continous deployment (CD) to these systems using github actions and travis.`}</p>\n    <p>{`Also gatsby have a lot of cool plugins which can help you create awesome blogs. I can list some of them which I used.`}</p>\n    <h2>{`Gatsby plugins I used.`}</h2>\n    <h3><a parentName=\"h3\" {...{\n        \"href\": \"https://www.gatsbyjs.com/plugins/gatsby-plugin-react-helmet/\"\n      }}>{`gatsby-plugin-react-helmet`}</a></h3>\n    <p>{`This plugin helps you make your SEO better by updating the title and description dynamically and also setting the meta tags.\nYou can see my `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/shamin/shamin.github.io/blob/master/src/components/seo.tsx\"\n      }}>{`seo.tsx`}</a>{` file to know more about how I set it up. This plugin uses `}<inlineCode parentName=\"p\">{`react-helmet`}</inlineCode>{` underneath.`}</p>\n    <h3><a parentName=\"h3\" {...{\n        \"href\": \"https://www.gatsbyjs.com/plugins/gatsby-source-filesystem/\"\n      }}>{`gatsby-source-filesystem`}</a></h3>\n    <p>{`Gatsby's filesystem plugin is one of the commonly used plugin. Usually it is used if one of the plugins or your custom plugin need to read some files in source.\nLike, for example In our case we want our `}<inlineCode parentName=\"p\">{`gatsby-plugin-mdx`}</inlineCode>{` to read all the `}<inlineCode parentName=\"p\">{`mdx`}</inlineCode>{` files, so I have set filesystem to read the `}<inlineCode parentName=\"p\">{`posts`}</inlineCode>{` folder which contain all\nmy mdx files.`}</p>\n    <h3><a parentName=\"h3\" {...{\n        \"href\": \"https://www.gatsbyjs.com/plugins/gatsby-plugin-mdx/\"\n      }}>{`gatsby-plugin-mdx`}</a></h3>\n    <p>{`This is an amazing gatsby plugin which lets you write pages in `}<inlineCode parentName=\"p\">{`mdx`}</inlineCode>{` format. `}<inlineCode parentName=\"p\">{`mdx`}</inlineCode>{` is a superset of markdown which supports `}<inlineCode parentName=\"p\">{`jsx`}</inlineCode>{`. That means you can import and\nuse react components along with markdown. This plugin takes care of everything and render the `}<inlineCode parentName=\"p\">{`mdx`}</inlineCode>{` to a page.`}</p>\n    <h3><a parentName=\"h3\" {...{\n        \"href\": \"https://www.gatsbyjs.com/plugins/gatsby-plugin-manifest/\"\n      }}>{`gatsby-plugin-manifest`}</a></h3>\n    <p>{`This plugin is used to create a manifest file for your web application. This is mostly useful for creating PWA apps, but I used it because I want to generate the favicons\nand icons.`}</p>\n    <p>{`These were the gatsby plugins I used. Apart from this I have used 2 other thirdparty libraries. This include emotion and prism js.`}</p>\n    <h2>{`Other libraries I used.`}</h2>\n    <h3><a parentName=\"h3\" {...{\n        \"href\": \"https://emotion.sh/\"\n      }}>{`Emotion`}</a></h3>\n    <p>{`I am big fan of css and I believe that a frontend developer show definetly have a solid css understanding. Emotion is css-in-js library which helps you write\nscoped css. One of the major benefits of using a scoped css is if you are ever going to remove a component file it will thereby remove the css also.\nSo you don't have to go into other files and remove it. It also have great benefits if you are writing shared components.`}</p>\n    <h3><a parentName=\"h3\" {...{\n        \"href\": \"https://prismjs.com/\"\n      }}>{`Prism js`}</a></h3>\n    <p>{`I am actually using a React version of this library called `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/FormidableLabs/prism-react-renderer\"\n      }}>{`prism-react-renderer`}</a>{`. It helps in syntax highlighting the code blocks. So I have created a mapping\nin my `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/shamin/shamin.github.io/blob/master/src/components/markdown/mdxStyler.tsx\"\n      }}>{`mdxStyler.tsx`}</a>{` file which maps my code component to a syntax hightlight component which uses prism-react-renderer. Prism js also comes with some awesome\nthemes.`}</p>\n    <p>{`I will be constantly improving this blog and I will try to update this post about the changes I make in the future. Thanks for reading.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}